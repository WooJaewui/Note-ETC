# DNS 배우기 전에 알아야 될 것들.

Host            Network에 연결된 Computer
Ip address      Computer와 Computer간에 서로 data를 주고 받을 수 있게 해주는 address.
Hosts file      Domain과 Ip address를 기록하고 있는 file. 
                Domain으로 computer간에 data를 주고 받을 수 있게 해준다.


# hosts file 찾기.

wikipedia hosts     파일시스템에서의 위치. 운영체제에 따라 hosts file의 위치가 나와있다.
                    hosts는 매우 중요한 file이여서 관리자 권한으로만 실행이 가능하다.


# Hosts file 사용하기.

Home server를 구축하고 있을때 DNS 사용하는 방법.

1. 메모장으로 hosts file을 켠다.
2. Public ip address를 적고 옆에 Domain name을 적는다.
3. web에 public ip address로 접속했을때와 Domain name으로 적었을때 똑같이 작동한다.

내가 적은 Domain name이 naver.com이여도 내 컴퓨터에서는 내가 연결한 ip address server가 실행된다.


# Security 관련

hosts file에 cracker가 들어와서 public ip address와 Domain name을 조작하면 내가 naver.com에 들어가려고 할때
Cracker가 원하는 사이트로 들어가진다. 
ex) Cracker가 금융관련 사이트와 똑같은 사이트를 만들면 아이디와 비밀번호 금융관련 정보 등을 얻어서 나쁜짓을 할 수 있다.
    https를 사용하면 보안적으로 조금 더 안전하게 web을 사용할 수 있다.


# before DNS

Hosts를 통해 나만 Domain을 통해 접속하는 것이 아닌 외부의 client도 Domain으로 내 컴퓨터에 들어오는 방법에 대해 생각해보기 시작했다.

Stanford Research Institute     세계에 Domain name을 hosts file로 관리하는 단체가 있었다.
                                다른 computer는 이 hosts file을 다운받아서 Domain name으로 다른 server에 접속이 가능해졌다.
                                여러가지 단점이 발생했다.


# DNS

DNS     Stanford Research Institute에 역할을 Domain Name System Server가 하기 시작했다.


# DNS 과정.

1. DNS를 활용하려는 Server가 DNS server에 domain name과 public ip address주소를 보낸다.
2. DNS server는 이 두가지 data를 저장한다.
3. Client는 ISP의 Lan선을 꼽으면 DNS server의 address를 알게된다.
4. Client가 인터넷에 Domain name을 치면 DNS server가 응답한다.
5. 그 DNS Server는 Public ip address data를 Client에게 보내준다.


# Public DNS

ISP에서 사용하는 DNS server보다 더 유용한 DNS server를 알거나 사용하고 싶으면 찾아서 연결하면 된다.


# DNS server 변경하는 법.

제어판 => 네트워크 및 인터넷 => 네트워크 및 공유 센터 => 이더넷 => 속성 => IPv4 속성 => DNS 주소 입력.


# DNS server에 대한 이해.

DNS Server는 크게 2가지 일을 한다.
1. Domain name과 그에 맞는 ip address data 저장.
2. client가 요청하는 DNS에 ip address를 보내주는 응답.

전세계에 수많은 DNS server가 존재한다.


# URL을 통한 DNS server이해.

blog.example.com.

.               Root name                   DNS Server 1개      Top-Level Domain을 알고 있다.
com             Top-level domain            DNS Server 1개      Second-level Domain을 알고 있다.
example         Second-level domain         DNS Server 1개      Sub Domain을 알고 있다.
blog            sub domain                  DNS Server 1개      

각각에 Part마다 DNS Server가 존재하고, 그 하위 Domain server address를 알고 있다.
모든 Host는 Root name server를 알고 있다.


# DNS register

Root name server                a.root-servers.net ~ m.root-servers.net이 있다.
Top-level domain                Registry        등록소           
authoritative name server       Registrar       등록대행자로 Top-level domain Registry에 Domain을 등록 해준다. 수수료 발생
                                Registrant      등록자 (Server를 만들려는 사람)

authoritative name server는 Registrar가 생성해 줄 수도 있고, authoritative name server를 찾아서 직접 연결 할 수 있다.

모든 DNS server는 Root name server를 알고 있다.


# DNS Server의 실행.

1. Client가 Domain Name을 입력한다.
2. DNS server에 client의 Domain name 요청이 들어온다.
3. DNS server가 Root name Server에게 Domain name에 대해 요청한다.
4. Root Name Server는 Domain name과 관련된 Top-level domain을 알려준다.
5. DNS Server는 Top-level domain에게 Domain name에 대해 요청한다.
6. Top-level domain은 Domain name과 관련된 authoritative name server를 알려준다.
7. DNS server는 authoritative name server에 domain name에 대해 요청한다.
8. authoritative name server는 domain name의 ip address를 알려준다.
9. DNS server는 authoritative name server에게 받은 ip address를 client에게 보낸다.


# nslookup

cmd
nslookup -type=a domian.com                  cache에 의해 non-authoritative answer이 나올 수 있다.
nslookup -type=ns domain.com                 nameserver에 ip address를 얻을 수 있다.
nslookup domain.com server_ip_address        nameserver에 직접 물어봐서 domian의 ip address를 알 수 있다.
a                                            address를 나타낸다.
ns                                           name server를 나타낸다.

TTL     cache의 갱신 시간.
cache   domain name에 address를 기억해서 매번 실행과정을 거치지 않도록 해준다.

dig는 nslookup과 비슷한 명령어이다(?). window에서는 호환이 안된다.


# Freenom

Domain을 등록하고, Name Server까지 생성해줘서 바로 DNS server를 통해 server에 접속 할 수 있도록 해준다.
1년까지는 무료이다.


# DNS record

DNS record는 domain을 저장하는 방식이다.
ex) domain.com NS server_ip_address, domain.com A 12.323.23.1

wikipedia에서 DNS record를 검색하면 여러가지 Resource record가 나온다. ex)a, NS...


# DNS Cname record.

canonical name이며, domain에 별명을 만들어주는 것이다.
ex) domain.com => Cname => www.domain.com 으로 바꿀 수 있다.

DNS 과정 
1. www.domain.com을 치면 
2. www.domain.com cname domain.com
3. domain.com a 23.23.13.23


# Domain Name System.

다른 홈페이지에서 domain name을 사용하기.

github에서 홈페이지를 운영할 경우로 생각해보기. 

등록과정.

1. github에서 DNS에 연결할 수 있는 ip address를 제공한다.
2. DNS Server에 ip address과 Domain name을 함께 저장한다.
3. github에 있는 web주소와 domain name을 연결한다.

실행과정.

1. client가 Domain name으로 요청한다.
2. DNS server는 Domain name에 맞는 ip address를 client에게 제공한다.
3. Client는 Domain name과 ip address를 가지고 github에 연결된다.
4. github에서 domain name에 연결한 web주소를 연결하고 응답한다.


# 더 공부해야 될 것들.

BIND                                세계 최초의 DNS server.
Web Hosting
DNS Server를 직접 만들어보기.
Dynamic DNS                         ip address가 변경되었을때 DDNS가 이것을 다시 연결시켜준다.
HTTPS, SSL                          보안과 관련된 이것에 대해 자세히 공부해보기.