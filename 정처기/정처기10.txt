

오답처리 - 5회차.

출처 입력


1. PC : fetch cycle 중에는 현재 수행하고 있는 명령어의 위치를 가르키고,

execute cycle 중에는 다음에 실행할 명령어의 위치를 가르키는 register이다.


3. 명령어의 실행 사이클 4가지 : fetch cycle, indirect cycle, execute cycle, interrupt cycle.


4. 전가산기 : 2개의 반가산기와 1개의 or 게이트로 구성.


10. OP-Code는 n비트에서 2**n개의 인스트럭션을 만들 수 있다.


14. AC : 묵시적 주소 지정 방식을 사용하는 산술 명령어는 AC 레지스터의 연산을 수행.


17. MIPS : 1초의 백만개 명령어를 수행.


18. 인덱스 addressing : 순차적인 주소 지정 등에 유리, 주소 지정에 2개의 레지스터가 사용되는 방식.


26. 데이터베이스 설계 단계 : 개념적 -> 논리적 -> 물리적.


38. Mutex : 상호 배제. 공유된 메모리에 접근을 제한하기 위한 방법.


46. passwd : Linux 사용자 계정 비밀번호 설정 및 변경.


51. HDLC 프레임을 구성하는 순서 : 플래그 -> 주소부 -> 제어부 -> 정보부 -> 검색부 -> 플래그.


52. PCM 전송에서 송신측 과정 : 음성 -> 표본화 -> 양자화 -> 부호화.


56. 전송 트래픽 제어 : 흐름 제어, 교착 상태 회피, 혼잡(폭주) 제어 등.


58. ARQ ( Automatic Repeat reQuest ) : 자동 재전송 방식.




자료표현과연산 - 복습

출처 입력



# Compliment 보수.


1. 1의보수

- 입력값의 반전된 값 ( 0 -> 1, 1 -> 0 )


2. 2의보수

- 1의 보수 + 1.


3. 보수를 사용하는 이유.

- 보수를 사용하지 않으면 가산기 이외에 감산기를 따로 두어야 한다.




# 자료 구조.


비트 : 0, 1

바이트 : 비트 8개가 모인 것.

워드 : 컴퓨터의 내부의 명령 처리 단위. 한 번에 처리할 수 있는 데이터의 양.

필드 : 파일 구성의 최소 단위. 데이터베이스에서 열.

레코드 : 하나 이상의 필드들이 모여서 구성된 자료 처리 단위. 데이터베이스의 행을 나타냄.

파일 : 여러 개의 레코드가 모여 구성.

데이터베이스 : 파일들의 집합.



# 자료 표현 방식.


1. 내부적 방식.

- 팩 10진 형식 : 연산은 가능하나 출력은 불가능.

- 언팩 10진 형식 : 숫자 1자리씩 표현.

- 고정 소수점 형식 : 2진 정수 데이터를 표현. 부호 비트와 수로 표현.

- 부동 소수점 표현 : 소수점이 있는 2진 실수 연산에 사용.

- 음수 표현법 : 부호와 절대치. 부호와 1의 보수, 부호와 2의 보수.



2. 외부적 방식.

- BCD 코드 : zone 2비트, digit 4비트.

- ASC II 코드 : zone 3비트, digit 4비트.

- EBCDIC 코드 : zone 4비트, digit 4비트.



# 주요 코드별 특징.


1. parity bit.

- 기존 코드값에 1비트를 추가하여 에러 발생 여부를 검사하는 체크 비트.

- 홀수 체크법, 짝수 체크법이 있다.

- 에러 검출만 가능하고 교정은 불가능. 짝수 개의 에러가 동시에 발생하면 검출이 불가능.


2. 해밍 코드.

- 1비트의 에러 검출과 에러 교정이 가능한 코드.


3. 그레이 코드.

- 비가중치 코드.

- 아날로그 -> 디지털로 코드 변환기나 입출력 장치 코드로 많이 사용.

- 입력 코드로 사용하면 오차가 적음.

- 2진 코드 -> 그레이코드 : 인접한 숫자를 XOR해서 값을 얻는다.

- 그레이코드 -> 2진 코드 : 연산 결과와 다음 숫자를 XOR해서 값을 얻는다.




연산 장치와 마이크로프로세서 - 복습.

출처 입력



# 연산장치 ( ALU )


산술적인 연산과 논리적인 연산을 담당하는 장치.


1. 누산기 : 산술 및 논리 연산의 결과를 일시적으로 기억.

2. 가산기 : 누산기와 데이터 레지스터의 값을 더하여 누산기에 저장.

3. 데이터 레지스터 : 연산에 사용되는 데이터의 일시적인 저장을 위해 사용.

4. 상태 레지스터 : 현재 상태를 나타내는 레지스터, 연산 결과에 대한 부호를 저장.

5. 보수기 : 뺄셈이나 나눗셈 연산을 위해 보수로 바꾸어 주는 장치.



# 제어장치의 레지스터


1. 메모리 번지 레지스터 : 주기억 장치의 번지를 기억.

2. 메모리 기억 레지스터 : 주기억 장치에서 연산에 필요한 자료를 호출하여 저장.

3. 명령 레지스터 : 현재 수행중인 명령어의 내용을 기억.

4. 프로그램 카운터 : 다음에 수행할 명령어의 번지를 기억.

5. 명령 해독기 : IR에 기억된 명령어들을 해독해서 각 장치에 제어 신호를 보냄.

6. 부호기 : 중앙 처리 장치에서 실행하기 위한 전기 신호로 변환하여 각 장치에 보내는 기능.

7. 플래그 레지스터 : 제어 논리 장치와 연산장치의 실행 순서를 제어하기 위해 사용되는 레지스터.



# 일반 레지스터.


1. 시프트 레지스터 : 클록 펄스에 의해서 기억도니 내용을 한자리씩 이동시켜 연산하는 레지스터.

2. 범용 레지스터 : 다목적으로 사용되는 레지스터.

3. 인덱스 레지스터 : 유효 번지를 상대적으로 계산할 때 사용.

4. 베이스 레지스터 : 유효 번지를 절대적으로 계산할 때 사용.

5. 버퍼 레지스터 : 읽거나 기록한 데이터를 일시적으로 기억할 수 있는 레지스터.

장치와 장치 간의 시간과 흐름의 차이를 위해 사용되는 임시 기억을 위한 레지스터.




# 마이크로 프로세서


CPU의 기능을 수행하기 위하여 만든 고밀도 집적 회로로 개인용 컴퓨터에 주로 사용되며,

연산 장치 + 제어 장치 + 레지스터로 구성.



# 마이크로프로세서의 장점.


컴퓨터의 시스템 크기의 소용화.

비교적 전력 소비가 적고 비용이 저렴.

높은 신뢰도 및 효율화.

고속 동작 속도 효과.



# 설계 방식에 따른 분류.


1. CISC

- 명령어가 많으며, 여러 주소 지정 모드 및 가변 길이 명령어 형식 지원.

- 프로그래밍이 용이하나, 적은 수의 레지스터로 처리 속도가 느림.

- 전력 소모가 많고 생산 가격이 비싸며, 설계와 구현시 많은 시간이 필요.


2. RISC

- 명령어 축약형 CPU.

- 주소 지정 모드와 명령어의 종류가 적음.

- LOAD, STORE 명령으로 메모리에 접근.

- 모든 명령어를 1 사이클에 실행.

- 단순한 파이프 라인 구조.


3. 버스

- 내부 버스 : CPU 내부에서 레지스터 사이에 데이터 및 제어 신호가 이동되는 통로.

- 외부 버스 : 1. 데이터 버스 2. 주소 버스 3. 제어 버스.





데이터베이스 - 복습.

출처 입력




# 데이터 베이스의 중요 키워드.


실시간 접근 처리.

자원의 동시 공유.

일관성 무결성 유지 및 데이터의 공유 및 표준화 가능.




# 데이터베이스 디자인 단계 순서.


목적정의 -> 테이블 정의 -> 필드 정의 -> 관계 정의.




# DBMS DataBase Management System.


데이터베이스 관리하는 소프트웨어 시스템.

응용프로그램과 데이터의 중재자 역할.




# 데이터베이스의 필수 기능.


1. 정의기능 : 물리적인 구조를 정의.

2. 조작기능 : 데이터베이스와 사용자 간의 상호 작용 수단을 제공.

3. 제어기능 : 데이터 간의 모순이 발생하지 않도록 함. 무결성 유지.




# 스키마.


데이터베이스를 구성하는 개체, 속성, 관계의 형식과 상호 관계 전체를 정의하는 것.


1. 외부 스키마 : 관점에 따라 부분적으로 분할한 스키마의 부분집합.

사용자나 응용 프로그래머가 직접 필요로 하는 데이터의 구조.


2. 개념 스키마 : 논리적 입장에서의 데이터베이스 전체 구조.


3. 내부 스키마 : 물리적 스키마라고도 함. 기억 장치 내에 실질적으로 구성된 구조.




# 데이터베이스 언어 ( DBL )


정의어 ( Data Definition Language ) : 데이터 액세스 방법 등을 규정.

조작어 ( Date Manipulation Language ) : 데이터를 운영 및 조작.

제어어 ( Date Control Language ) : 데이터의 보안, 무결성, 회복,병행 수행 등을 제어.




# DBA ( DataBate Administrator )


데이터의 저장 구조와 접근 방법 결정.

데이터베이스를 구성하는 정보 내용 정의.

스키마의 정의.

데이터베이스를 사용자 요구에 맞도록 재구성.




# 관계형 데이터베이스 용어.


1. 릴레이션 : 테이블과 같은 개념이다.

2. 테이블 : 2차원 형태로 행과 열로 나타내는 저장소.

3. 튜플 : 행을 나타내는 용어. ( 레코드와 같은 의미 )

4. 속성 : 열을 나타내는 용어. ( 필드와 같은 의미 )

5. 도메인 : 하나의 속성이 취할 수 있는 값의 집합.

6. 차수 : 속성( 열, 필드 ) 의 갯수 .

7. 기수 : 튜플 ( 행, 레코드 ) 의 갯수.

8. 기본키 : 후보키 중에서 선정되어 사용되는 키. 중복 X, NULL X.

9. Null : 정보 부재를 명시적으로 표시하기 위해 사용하는 특수한 데이터 값.




date 210623

﻿