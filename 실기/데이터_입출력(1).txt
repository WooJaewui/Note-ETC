
 데이터 입출력(1) - 37.



 # 데이터 전환.

데이터 전환.
기존 정보 시스템에 축적되어 있는 데이터를 추출( Extraction )하여 새로운 정보 시스템에 적재하는 과정.
데이터 이행( Data Migration ) 이라고도 불린다.

용어.
추출( Extraction ) : 기존 정보 시스템에 있는 정보를 추출.
변환( Transformation ) : 새로운 정보 시스템에 저장 가능하도록 변환.
적재( Loading ) : 변환된 데이터를 저장.
데이터 전환 계획서 : 전환 대상을 분석하여 전환 작업에 필요한 모든 계획을 기록하는 문서.



 # 데이터 검증.

데이터 검증.
원천 시스템 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행되었는지 확인하는 과정.

검증 방법.
로그 검증 : 전환 과정에서 작성하는 추출, 전환, 적재 로그를 검증.
기본 항목 검증 : 로그 검증 외에 별도로 요청된 검증 항목에 대해 검증.
응용 프로그램 검증 : 응용 프로그램을 통한 데이터 전환을 검증.
응용 데이터 검증 : 사전에 정의된 업무 규칙을 기준으로 데이터 전환을 검증.
값 검증 : 숫자 항목의 합계 검증, 코드 데이터의 범위 검증, 속성 변경에 따른 값 검증을 수행.

검증 단계.
추출 : 원천 시스템 데이터에 대한 정합성 확인.
전환 : 매핑 정의서에 정의된 내용 확인, 매핑 정의서 오류 여부 확인.
적재 : 적재 과정에서 발생할 수 있는 오류나 데이터 누락 여부 등 확인.
적재 후 : 적재 완료 후 정합성 확인.
전환 완료 후 : 추가 검증 과정을 통해 정합성 검증.



 # 오류 데이터 측정 및 정제.

필요성.
고품질의 데이터를 운영 및 관리하기 위해서 수행.

진행 과정.
데이터 품질 분석 : 오류 데이터를 찾기 위해 데이터의 정합성을 확인.
오류 데이터 측정 : 오류 데이터를 측정해서 관리 목록을 작성하는 작업.
오류 데이터 정제 : 오류 데이터를 수정하거나 데이터 전환 프로그램 자체를 수정.

오류 상태.
Open : 오류가 보고만 되고 분석되지 않은 상태.
Assigned : 오류의 영향 분석 및 수정을 위해서 개발자에서 오류를 전달한 상태.
Fixed : 개발자가 오류를 수정한 상태.
Closed : 수정된 데이터를 테스트 했을 때 오류가 발견되지 않은 상태.
Deferred : 오류 수정을 연기한 상태.
Classified : 보고된 오류를 관련자들이 확인했을 때 오류가 아니라고 확인된 상태.

문서.
데이터 정제 요청서 : 데이터 정제와 관련된 전반적인 내용을 문서화 한 것.
데이터 정제 보고서 : 정제도니 데이터가 정상적으로 정제되었는지 확인한 결과를 문서화 한 것.



 # DBMS.

데이터베이스.
연관된 데이터의 모임이라 이해할 수 있으며, 데이터를 일정한 형태로 저장해 놓은 것을 의미한다.

정의.
저장 데이터( Stored Data ) : 컴퓨터를 통해 접근 가능한 저장 매체에 저장된 데이터.
통합 데이터( Integrated Data ) : 중복이 최소화된 데이터.
공유 데이터( Shared Data ) : 여러 응용 프로그램이 공동으로 사용하는 데이터.
운영 데이터( Operational Data ) : 목적을 위해 존재 가치가 확실하고 반드시 필요한 데이터.

DBMS의 필요성.
과거에 파일 시스템을 이용하여 데이터를 관리하였는데 문제점이 발견되어 DBMS가 탄생.

DBMS DataBase Management System.
사용자의 요구에 따라 정보를 생성해주고 데이터베이스를 관리해주는 소프트웨어.

DBMS의 3대 기능.
정의( Definition ) : 개체를 생성하고 구졸르 변경하고 삭제하는 기능.
조작( Manipulation ) : 데이터를 CRUD하는 기능.
제어( Control ) : 데이터의 무결성, 보안, 회복, 병행 제어 관련 기능.



 # 데이터의 독립성.

데이터 독립성.
논리적 독립성 : 응용 프로그램과 데이터베이스를 논리적으로 분리해서 구현함. 
                   ( 논리적 구조를 변경해도 데이터베이스는 영향 X )
물리적 독립성 : 응용 프로그램과 실제 데이터 저장소를 분리해서 구현.
                   ( 물리적 구조를 변경해도 데이터베이스는 영향 X ) 

데이터 독립성의 구현 방법.
스키마 : 데이터베이스의 구조에 대한 정의와 제약 조건 등을 기술한 것.
외부 스키마( external schema ) : 사용자나 응용 프로그래머가 접근할 수 있는 데이터베이스.
개념 스키마( conceptual schema ) : 범 기관 적 입장에서 본 데이터베이스의 정의를 기술 한 것.
내부 스키마( internal schema ) : 물리적 저장 장치의 관점에서 본 데이터베이스를 명세.



 # DBMS - 종류.

종류.
Hierarchical-DB( 계층형 데이터베이스 ) : 디렉토리와 파일 등의 계층 구조로 저장하는 방식의 데이터베이스.
Network-DB : 계층형 데이터베이스 중복 문제를 해결하기 위해 레코드 간의 관계를 그물처럼 갖는 데이터베이스.
Realational-DB( 관계형 데이터베이스 ) : 테이블 구조의 데이터베이스.
객체 지향 관계형 데이터베이스 : 객체 그대로 저장하는 데이터베이스.
XML 데이터베이스 : 태그 형태로 데이터를 저장하는 방식으로 XQuery라는 전용 명령어를 사용.
No SQL : SQL 방식이 아닌 데이터베이스.

No SQL 종류.
Key-Value Store : 키와 값의 형식으로 단순하게 데이터를 저장하는 방식의 데이터베이스.
Document : 하나의 데이터를 하나의 문서로 취급하는 데이터베이스. ( Mongo DB )
Big Table( Column ) : Key-Value 형식을 확장한 개념으로 Column Fmaily라는 개념을 도입.( Cassandra )



 # 데이터베이스 설계.

설계.
사용자의 요구 사항을 분석 후 데이터베이스를 구현하여 사용자들이 사용할 수 있도록 하는 것.

고려사항.
무결성( Integrity ) : 삽입, 삭제, 갱신 등의 연산 후에도 정해진 제약 조건을 만족.
일관성( Consistency ) : 저장된 데이터들 사이나 특정 질의에 대한 응답이 일정.
회복( Recovery ) : 시스템 장애가 발생했을 때 장애 발생 직전의 상태로 복구 가능.
보안( Security ) : 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호.
효율성( Effeciency ) : 응답 시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능.
확장( Extension ) : 데이터베이스 운영에 영향을 주지 않으면서 데이터 추가 가능.

설계 단계.
요구조건 분석 단계 : 사용자로부터 데이터의 용도를 파악하는 작업.
개념적 설계 단계 : 현실 데이터를 추상적인 개념의 스키마로 변환하는 작업. 
논리적 설계 단계 : 특정 DBMS의 논리적 구조로 변환하는 과정.
물리적 설계 단계 : 논리적 구조를 물리적 저장장치의 구조로 변환하는 과정.
구현단계.



 # 데이터 모델.

데이터 모델.
현실 세계의 정보들을 컴퓨터에 표현하기 위해 단순화, 추상화하여 체계적으로 표현한 모형.

구성요소.
개체( Entity ) : 사람의 개념이나 정보 단위 같은 현실 세계의 대상.
속성( Attribute ) : 데이터의 가장 작은 논리적 단위.
관계( Relationship ) : 개체 간의 관계 도는 속성 간의 논리적인 연결.

데이터 모델의 종류.
개념적 데이터 모델 : 현실 세계의 대한 인식을 추상적 개념으로 표현하는 과정. ( E-R Diagram )
논리적 데이터 모델 : 개념적 모델링 과정에서 얻은 구조를 컴퓨터 환경에 맞도록 변환하는 과정.
물리적 데이터 모델 : 실제 컴퓨터에 데이터가 저장되는 방법을 정의.

데이터 모델에 표시할 요소.
구조( Structure ) : 논리적으로 표현된 개체 타입들 간의 관계로 데이터 구조 및 정적 성질을 표현.
연산( Operation ) : 데이터베이스에 저장도니 실제 데이터를 처리하는 작업.
제약조건( Constraint ) : 데이터베이스에 저장될 수 있는 데이터의 제약 조건.

데이터 정보 저장.
데이터 사전 : DBA의 도구로써 시스템 내의 모든 개체들의 대한 정의나 명세에 관한 정보를 저장.
데이터 디렉토리 : 데이터 사전에 수록된 데이터를 참조하는데 필요한 정보를 저장. ( 시스템에서 사용 )



 # 모델링.

모델링의 3가지 관점.
데이터 관점 : 데이터 간의 관계, 업무가 어떤 데이터와 관련이 있는지, 데이터 간의 관계가 무엇인지.
프로세스 관점 : 업무가 실제하고 있는 일이 무엇인지, 무엇을 모델링해야 하는지.
데이터와 프로세스의 상관 관점 : 업무가 처리하는 일의 방법에 따라 데이터가 어떻게 되는지.

모델링의 이해.
추상화( 모형화, 가설적 ) : 현실세계를 일정한 형식에 맞추어 표현을 한다는 의미.
단순화 : 복잡한 현실세계를 약속된 규약에 의해 표현하여 쉽게 이해할 수 있도록 하는 개념.
명확화 : 대상에 대한 애매모호함을 제거하고 정확하게 현상을 기술하는 것.
모델링의 재정의 : 현실세계를 추상화, 단순화, 명확화 하기 위해 표기법에 의해 표현하는 것.

정보시스템 구축에서 모델링 활용.
계획, 분석, 설계 단계 : 업무를 분석하고 설계하는데 이용.
구축, 운영 단계 : 변경과 관리의 목적으로 이용.



 # 개체 Entity.

개체.
현실 세계의 대상체이며 실 세계에 독립적으로 존재하는 정보.
데이터의 집합이다.

구성요소.
속성( Attribute ) : 개체가 가지고 있는 특성.
개체 타입( Entity Type ) : 속성으로만 기술된 개체의 정의.
개체 인스턴스( Entity Instance ) : 하나의 개체를 나타내는 것.
개체 세트( Entity Set ) : 개체 인스턴스의 집합.

특징.
유일한 식별자에 의해 식별이 가능해야 된다.
반드시 하나 이상의 속성이 포함되어야 한다. ( 관계 Entity의 경우 식별자 속성만으로 Entity인정 )
Entity는 다른 Entity와 최소 한 개 이상의 관계를 존재하여야 함.

형태에 따른 분류.
유형 엔티티( Tangible Entity ) : 물리적 형태가 있고 안정적이며 지속적으로 활용되는 entity.
개념 엔티티( Conceptual Entity ) : 물리적 형태가 없고 개념적 정보로 구분이 되는 entity.
사건 엔티티( Event Entity ) : 업무를 수행함에 따라 발생되는 entity.

발생 시점에 따른 분류.
기본 엔티티( Basic Entity ) : 업무에 원래 존재하는 정보 독립적으로 생성 가능.
중심 엔티티( Main Entity ) : 기본 엔티티로부터 발생되고, 그 업무에 있어서 중요한 역할.
행위 엔티티( Active Entity ) : 두 개 이상의 Entity로부터 발생되고 자주 내용이 바뀌거나 데이터 양이 증가.
종속 엔티티( Dependent Entity ) : 정규화의 결과로 만들어지는 entity.
교차 엔티티( Intersection Entity ) : 다 대 다 관계 해소 목적의 entity.



 # 속성 Attribute.

속성.
데이터베이스를 구성하는 가장 작은 논리적 단위로 개체의 특성을 기술.

용어.
도메인 : 속성이 가질 수 있는 값의 범위.
Degree : 속성의 개수.

분해 여부에 따른 분류.
단일 속성 : 하나의 의미로 구성된 것.
복합 속성 : 여러 개의 의미가 있는 것.
다중 값 속성 : 여러 개의 값을 가질 수 있는 것. ( 다른 엔티티로 독립 시켜야 된다 )

개체 구성 방식에 따른 분류.
기본키 : Entity 내에서 Row를 구분하기 위한 속성.
외래키 : 다른 Entity의 데이터를 조회하기 위한 속성.
일반 속성 : Entity 내에 속해있지만 기본키나 외래키에 속하지 않는 속성.

특성에 따른 구분.
기본 속성( Basic Attribute ) : 업무 분석을 통해 정의한 속성. ( 업무상 코드로 정의한 속성은 제외 )
설계 속성( Designed Attribute ) : 원래 존재하지 않고 설계 과정에서 도출해내는 속성.
파생 속성( Derived Attribute ) : 다른 속성으로부터 계산이나 변형 등의 영향을 받아 발생하는 속성.



 # 관계 및 관계 타입.

용어.
관계 : 2개 이상의 개체 사이에 존재하는 연관성. ( 카디널리티를 서유 )
관계 타입 : 같은 관계들의 집합.
개체 어커런스( occurrence ) : 개체 인스턴스를 의미한다. 

관계의 종류.
존재 관계 : 엔티티 간의 상태를 의미하는 것으로 아무런 행위 없이 존재하는 관계.
행위 관계 : 엔티티 간의 행위가 있는 것으로 특정 행위를 해야만 만들어지는 관계.

차수에 따른 종류.
단항( Unary ) 관계 : 관계에 참여하고 있는 개체 타입이 1개인 관계.
이항( Binary ) 관계 : 관계에 참여하고 있는 개체 타입이 2개인 관계.
삼항( Ternary ) 관계 : 관계에 참여하고 있는 개체 타입이 3개인 관계.
n항( n-ary ) 관계 : 관계에 참여하고 있는 개체 타입이 n개인 관계.

대응 카디널리티에 따른 종류.
1:1 관계 : 관계에 있는 두 개체 타입이 모두 하나씩의 개체 어커런스( occurrence )를 갖는 관계.
1:N 관계 : 관계에 있는 두 개체 타입 중 한 개체 타입은 여러 개 다른 개체는 1개의 어커런스를 갖는 관계.
N:M 관계 : 관계에 있는 두 개체 타입 모두 여러 개의 어커런스를 가질 수 있는 관계.

업무 형태에 따른 종류.
종속 관계( Dependent ) : 두 개체 사이의 주 / 종 관계를 표현한 것으로 식별 / 비식별 관계가 있다.
중복 관계( Redundant ) : 두 개체 사이에 2번 이상의 종속 관계가 발생하는 관계.
재귀 관계( Recursive ) : 개체가 자기 자신과 관계를 갖는 것. 순환 관계 라고도 한다.
배타 관계( Exclusive ) : 개체의 속성이나 구분자를 기준으로 개체의 특성을 분할하는 관계로 and, or 관계가 있다.



 # 식별자 Identifier.

대표성 여부에 따른 분류.
주 식별자( Primary Identifier ) : 개체를 대표하는 유일한 식별자. ( 유일성, 최소성, 불변성, 존재성 )
보조 식별자( Alternate Identifier ) : 주 식별자를 대신하여 개체를 식별할 수 있는 속성.

스스로 생성되었는지에 따른 분류.
내부 식별자( Internal Identifier ) : 개체 내에서 스스로 만들어지는 식별자.
외부 식별자( Foreign Identifier ) : 다른 개체와의 관계에 의해 만들어지는 식별자. ( 참조 )

단일 속성으로 이루어 졌는지에 따른 분류.
단일 식별자( Single Identifier ) : 주 식별자가 한 가지 속성으로만 구성된 식별자.
복합 식별자( Composit Identifier ) : 주 식별자가 두 개이상으로 구성된 식별자.

기존 식별자를 대체하기 위해 만들어졌는지에 따른 분류.
원조 식별자( Original Identifier ) : 가공되지 않은 원래의 식별자.
대리 식별자( Surrogate Identifier ) : 주 식별자의 속성이 두 개 이상인 경우 하나로 묶어 사용하는 식별자.

기타 식별자.
후보 식별자( Candidate Identifier ) : 개체에서 각 인스턴스를 유일하게 식별할 수 있는 속성 또는 속성 집합.




 # E - R( Entity Relation )데이터 모델.

E-R 모델.
개체와 개체 사이의 관계를 기본 요소로 해서 현실세계의 데이터를 개념적인 데이터 모델로 변환하기 위한 방법.

ER Diagram.
Entity-Relationship Model을 표현하여 현실세계의 요구사항들로 부터 Database를 설계하는 과정으로 활용한다.
널리 사용되는 표기법의 하나로 직관적 이해성이 뛰어나고 구체적이고 상세한 표현성 등의 장점이 있다.

IE - 까마귀발 표기법.
Infomation Engineering에서 사용하는 Data 모델 표기법이다.
가장 널리 사용되는 표기법의 하나지만 상세 표현에 있어서 공간을 많이 차지하는 단점이 있음.




























