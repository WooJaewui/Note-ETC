

 데이터 입출력(2) - 마무리.



 # 관계형 데이터베이스.

관계형 데이터베이스.
테이블의 집합으로 데이터를 표현하는 데이터베이스.
성능이 떨어지는 단점이 있음.

릴레이션.
데이터들을 표의 형태로 표현한 것이다. 
구조를 나타내는 릴레이션 스키마와 실제 값인 릴레이션 인스턴스로 구성.

속성 Attribute.
릴레이션을 구성하는 각각의 열( column ).
데이터베이스를 구성하는 가장 작은 논리적 단위.

튜플 Tuple.
릴레이션을 구성하는 각각의 행( row ).
속성의 모임으로 구성된다.
파일 구조에서 레코드와 같은 의미.

도메인 Domain.
하나의 속성이 취할 수 있는 같은 타입의 원자값들의 집합.

릴레이션 인스턴스.
데이터 개체를 구성하고 있는 속성들에 데이터 타입이 정의되어 구체적인 값을 갖고 있는 것을 의미.

키 Key.
슈퍼키( Super Key ) : 유일성은 만족하지만 최소성은 만족하지 못하는 키.
후보키( Candidate Key ) : 유일성 + 최소성.
기본키( Primary Key ) : 후보키 중에서 선정된 키로 튜플을 구별하기 위한 유일한 키이며 유일한 식별자이다.
대체키( Alternate Key ) : 후보키 중에서 기본키를 제외한 나머지 후보키.
외래키( Foreign Key ) : 다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합.

무결성 Integrity.
데이터베이스에 저장된 데이터 값이 실제 값과 정확히 일치하는 것을 의미한다.

무결성 제약조건 종류.
개체 무결성( Entity Integrity ) : 기본키를 구성하는 어떤 속성도 Null 값이나 중복 값을 가질 수 없음.
참조 무결성( Referential Integrity ) : 외래키 값은 Null 또는 참조 릴레이션의 기본키 값과 같아야 한다.
도메인 무결성( Domain Integrity ) : 주어진 속성 값이 정의된 도메인에 속한 값이어야 한다.
키 무결성( Key Integrity ) : 하나의 릴레이션에는 적어도 하나의 키가 존재해야 한다는 규정.
Null 무결성.
Unique 무결성.
관계 무결성.

무결성 강화 방법.
응용 프로그램에서 데이터의 유효성 검사를 수행. ( Application Validation Check )
데이터베이스의 trigger 이용.
데이터베이스의 무결성 제약조건 설정.

테이블.
관계형 데이터베이스의 가장 기본적인 개체이다.

이상 Anomaly.
테이블에서 일부 속성들의 종속으로 인해 데이터의 중복이 발생될 때 테이블의 조작 문제가 발생하는 현상.
삽입이상 : 데이터를 삽입할 때 원하지 않는 값들로 인해 삽입할 수 없게 되는 현상.
삭제이상 : 튜플을 삭제할 때 원하지 않는 값들도 함께 삭제되는 현상.
갱신이상 : 속성 값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 불일치성이 생기는 현상.

함수적 종속.
x -> y의 관계를 갖을 때 x = 결정자, y는 종속자라고 한다.
완전 함수적 종속 : 테이블에 속성이 여러개 있을 때 여러개의 속성이 하나의 외부 속성을 종속하는 경우.
부분 함수적 종속 : 테이블에 속성이 여러개 있을 때 여러개의 속성 중 일부만 외부 속성을 종속하는 경우.
이행적 함수 : A -> B 이고 B - > C이면 A - > C이다.



 # 정규화 / 반 정규화.

정규화 Normalization.
테이블의 속성들이 상호 종속적인 관계를 갖는 특성을 이용해서 무손실 분해하는 과정.
장점 : 중복 값이 줄어든다, NULL 값이 줄어든다, 데이터 구조의 안정성을 최대화한다.
단점 : JOIN 횟수 증가( 성능 떨어짐 ), 조회 / 검색 위주의 응용시스템에 부적합.

정규화 종류.
비정규 릴레이션 - > 1NF - > 2NF - > 3NF - > BCNF - > 4NF - > 5NF .

반정규화 Denormalization.
시스템의 성능 향상, 개발 등을 위해 정규화된 데이터 모델을 통합, 중복, 분리리하는 과정.

구현방법.
테이블 통합.
테이블 분할.
중복 테이블 추가.
중복 속성 추가.



 # 데이터베이스 용량 설계.

용량 설계.
데이터가 저장될 공간을 정의하는 것.
테이블에 저장할 데이터 양과, 인덱스, 클러스터 등이 차지하는 공간 등을 예측하여 반영.

데이터 접근성을 향상시키는 설계 방법.
테이블의 테이블 스페이스와 인덱스의 테이블 스페이스를 분리하여 구성.
테이블 스페이스와 임시 테이블 스페이스를 분리하여 구성.



 # 분산 데이터베이스.

분산 데이터베이스.
여러 곳으로 분산되어 있는 데이터베이스를 하나의 가상 시스템으로 만든 데이터베이스.
논리적으로 동일한 시스템이나 물리적으로는 분산되어 있는 데이터들의 모임이다.

투명성 Transparency.
분할 투명성( 단편화 ) : 하나의 논리적 Relation이 여러 단편으로 분할되어 각 단편의 사본이 여러 곳에 저장.
위치 투명성 : 사용하려는 데이터의 저장 장소 명시가 필요하지 않음.
지역 사상 투명성 : 지역 DBMS와 물리적 DB사이에 Mapping 보장.
중복 투명성 : DB객체가 여러 사이트에 중복되어 있는지 알 필요가 없는 성질.
장애 투명성 : 구성요소( DBMS, Computer )의 장애에 무관한 트랜잭션의 원자성 유지.
병행 투명성 : 다수 트랜잭션 동시 수행 시 결과의 일관성 유지.



 # 파일 시스템.

파일시스템.
DAM( Direct Access Method ) : 해싱을 이용하여 직접적으로 액세스할 수 있는 방식.
SAM( Sequential Access Method ) : 순차적으로 액세스할 수 있는 방식.
ISAM( Index Sequential Access Method ) : 인덱스를 이용하여 데이터를 액세스할 수 있는 방식. ( 하드웨어 )
VSAM( Virtual Sequential Access Method ) : Index내의 주소를 소프트웨어적으로 처리하는 방식. 
NFS( Network File System ) : 네트워크 상의 파일을 직접 연결된 스토리지에 접근하는 방식과 비슷하게 사용.


 # 데이터베이스 이중화.

이중화.
동일한 데이터베이스를 복제하여 관리하는 것이다.

분류.
Eager 기법 : 데이터 변경이 발생되면 이중화 된 데이터베이스에 즉시 전달하여 변경 내용 반영.
Lazy 기법 : 데이터 변경이 발생되면 새로운 트랜잭션에 작성하여 각 데이터베이스에 전달.

구성 방법.
활동 - 대기 방법 : 하나의 데이터베이스가 활성 상태면 나머지 데이터베이스는 대기.
활동 - 활동 방법 : 모든 데이터베이스가 활성 상태로 존재.

클러스터링.
두 대 이상의 서버를 하나의 서버처럼 운영하는 기술.

RTO / RPO.
RTO( Recovery Time Objective ) : 장애가 발생한 시점부터 복구되어 가동될 때 까지 소요 시간.
RPO( Recovery Point Objective ) : 장애가 발생한 이후 데이터를 복구할 수 있는 기준점.



 # 데이터 보안.

보안
데이터베이스의 일부 또는 전체에 대해 접근을 못하게 하는 것.

암호화.
지정한 수신자 이외에는 내용을 알 수 없도록 하는 방법이다.
Encrytion : 평문을 암호문으로 변경하는 것.
Decryption : 암호문을 평문으로 변경하는 것.

접근 통제 기술.
임시 접근 통제 : 사용자의 신원에 따라 접근 권한을 부여. ( 데이터 소유자가 권한 )
강제 접근 통제 : 사용자와 개체에 따라 접근 권한을 부여. ( 시스템이 권한 )
역할 기반 접근 통제 : 사용자의 역할에 따라 접근 권한을 부여. ( 중앙 관리자가 권한 )

접근 통제 3요소.
접근 통제 정책 : 신분 기반 정책, 규칙 기반 정책, 접근 통제 보안 모델.
접근 통제 메커니즘 : 접근 통제를 위한 기술적인 방법. ( 보안 등급, 비밀번호, 암호화 등 )
접근 통제 보안 모델 : 보안 정책을 구현하기 위한 정형화된 모델.



 # 병행 제어.

병행 제어.
동시에 실행되는 트랜잭션들이 일관성을 파괴하지 않도록 상호작용을 제어하는 것.

병행 제어 종류.
Locking : Lock을 이용.
Time Stamp Ordering : 트랜잭션에 시간표를 부여하여 부여된 시간에 따라 작업을 수행.
최적 병행 수행 : 충동률이 매우 낮은 경우 병행 제어 기법을 사용하지 않고 실행.
다중 버전 기법 : 갱신될 때마다 버전을 부여하여 관리.



 # Storage.

Storage.
많이 양의 데이터를 저장하기 위한 서버와 저장장치를 연결하는 기술.

종류.
DAS( Direct Attachged Storage ) : 전용케이블로 연결하는 방식.
NAS( Network Attached Storage ) : 네트워크로 연결하는 방식.
SAN( Storage Area Network ) : 전용 네트워크를 구축하는 방식.











