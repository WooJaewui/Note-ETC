
 소프트웨어 개발 보안 구축.



 # SW 개발 보안.

SW 개발 보안.
해킹 등 보안 취약점을 SW개발 단계에서 미리 제거하여 안전한 소프트웨어를 개발 하기 위한 방법.

보안 관련 기관.
행정 안전부, KISA( 한국인터넷진흥원 ), 발주기관, 사업자, 감리법인.

소프트웨어 개발 직무 별 보안 활동.
Project Manager : 조직 구성원들에게 응용 프로그램 보안 영향을 이해시킴.
Requirement Specifier : Architect가 고려해야 할 보안 관련 비지니스 요구사항을 설명.
Architect : 보안 기술 문제를 충분히 이해.
Designer : 특정 기술에 대해 보안 요구사항의 만족성 여부를 확인.
Implementer : 시큐어 코딩 표준을 준수하여 개발.
Test Analyst : 소프트웨어 개발 요구 사항과 구현 결과를 반복적으로 확인.
Security Auditor : 현재 상태의 보안을 보장.

Secure SDLC 방법론.
CLASP : SDLC의 초기 단계에서 보안을 강화하기 위해 개발된 방법론.
SDL : Microsoft에서 안전한 소프트웨어 개발을 위해 기존의 SDLC를 개선한 방법론.
Seven Touchpoints : 소프트웨어 보안의 모범 사례를 SDLC에 통합한 방법론.

SDLC 단계별 보안 활동.
요구사항 분석 단계 : 보안 항목에 해당하는 요구 사항을 식별하는 작업을 수행.
설계 단계 : 식별된 보안 요구사항들을 소프트웨어 설계서에 반영하고 보안 설계서를 작성함.
구현 단계 : 표준 코딩 정의서 및 개발 보안 가이드를 준수하며 보안 요구 사항들을 구현.
테스트 단계 : 설계 단계에서 작성한 보안 설계서를 바탕으로 동작을 점검.
유지보수 단계 : 이전 과정을 모두 수행했음에도 발생할 수 있는 보안 사고들을 식별.

SW 개발 보안의 요소.
기밀성( confidentiality ) : 시스템 내의 정보와 자원은 인가된 사용자에게만 접근이 허용.
무결성( integrity ) : 시스템 내의 정보는 오직 인가된 사용자만 수정.
가용성( availability ) : 인가 받은 사용자는 언제라도 사용 가능.
인증( authentication ) : 자원을 사용하려는 사용자가 합법적인 사용자인지 확인하는 모든 행위.
부인 방지( Non-repudiation ) : 데이터를 송수신한 증거를 제공.

사회 공학 Social Engineering.
사람들을 속여 정상 보안 절차를 깨뜨리기 위한 비 기술적 시스템 침입 수단.

보안 아키텍쳐 - ITU - T X.805.
보안 아키텍처는 정보 시스템의 무결성, 가용성, 기밀성을 확보하기 위해 보안 체계를 식별한다.
보안 아키텍처는 보안 계층, 보안 영역, 보안 요소의 3개 레이어로 구분.



 # Secure Coding.

시큐어 코딩.
안전한 소프트웨어를 개발하여 각종 보안 위협으로부터 예방하고 보안성을 고려.

시큐어 코딩의 목적.
보안 취약점과 결함 방지 : SQL injection, zero day attack 등 보안 취약점을 사전에 제거.
안전한 대 고객 서비스 확대 : 대 고객 서비스의 보안취약점을 지속적으로 진단하여 제거.
안정성 및 신뢰성 확보 : 정보 시스템의 기초 단계부터 대응조치를 제안하여 보안성을 강화.

보안 프레임워크.
안전한 정보 시스템 환경을 유지하고 보안 수준을 향상시키기 위한 체계.



 # 세션 통제.

세션.
서버와 클라이언트의 연결.

세션통제.
세션의 연결과 연결로 인해 발생하는 정보를 관리하는 것.

세션 통제의 보안 약점.
불충분한 세션 관리 : 규칙이 존재하는 세션ID 발급이나, 타임아웃이 너무 길게 설정되어 있는 경우.
잘못된 세션에 의한 정보 노출 : 다중 쓰레드 환경에서 멤버 변수에 정보를 저장할 때 발생하는 약점.

세션 설계 시 고려 사항.
모든 페이지에서 로그아웃이 가능하도록 UI 구성.
로그아웃 요청 시 할당된 세션이 완전히 제거되도록 함.
세션 타임아웃은 중요도 높을때 2~5분, 낮을 때는 15~30분.
이전 세션이 종료되지 않으면 새 세션이 생성되지 못하게 설계.
중복 로그인을 허용하지 않는 경우 클라이언트의 중복 접근에 대한 세션 관리 정책을 수립.
패스워드 변경 시 활성화된 세션을 삭제하고 재할당.

세션ID 관리 방법.
안전한 서버에서 최소 128비트 길이로 생성.
예측이 불가능하도록 안전한 난수 알고리즘 적용.
URL Rewrite 기능을 사용하지 않는 방향으로 설계.
로그인시 로그인 이전의 세션 ID를 삭제하고 재할당.
장기간 접속하고 있는 세션ID는 주기적으로 재할당되도록 설계.



 # 입력 데이터 검증 및 표현.

입력 데이터 검증 및 표현.
입력 데이터로 인해 발생 하는 문제들을 예방하기 위해 구현 단계에서 검증해야 하는 보안 점검 항목.

SQL injection.
응용 프로그램에 SQL을 삽입하여 무단으로 DB를 조회하거나 조작하는 보안 약점.
관리자 인증을 우회하기도 함.
예약어 및 특수문자가 입력되지 않게 필터링 되도록 설정하여 방지.

경로 조작 및 자원 삽입.
데이터 입출력 경로를 조작하여 서버 자원을 수정 / 삭제할 수 있는 보안 약점.
사용자 입력 값을 식별자로 사용하는 경우 경로 순회 공격을 막는 필터를 사용하여 방지.

크로스사이트 스크립팅( XSS ).
웹 페이지에 악의적인 스크립트를 삽입하여 정보를 탈취하거나, 비정상적인 기능 수행을 유발.
HTML 태그의 사용을 제한하거나 스크립트에 삽입되지 않도록 '<', '>', '&' 등의 문자를 치환하여 방지.

운영체제 명령어 삽입.
시스템 명령어의 실행을 유도함으로써 권한을 탈취하거나 시스템 장애를 유발.
외부 입력 값을 검증없이 내부 명령어를 사용하지 않음으로써 방지.

위험한 형식 파일 업로드.
악의적인 명령어가 포함된 스크립트 파일을 업로드함으로써 시스템에 손상을 유발.
업로드 되는 파일의 확장자 제한, 파일명의 암호화, 웹 사이트와 파일 서버의 경로 분리.

신뢰되지 않는 URL 주소로 자동 접속 연결.
입력 값으로 사이트 주소를 받는 경우 이를 조작하여 방문자를 피싱 사이트로 유도.
연결되는 외부 사이트의 주소를 화이트 리스트로 관리함으로써 방지.

메모리 버퍼 오버플로우.
메모리의 범위를 넘어선 위치에서 자료를 읽거나 쓰려고 해서 발생하는 보안 약점.
경계 검사로 버퍼 오버플로를 방지.

감사 추적.
외부의 불법적인 침입을 파악하기 위해 정보 시스템 내 / 외부의 모든 활동을 기록하고 분석.



 # 보안기능.

보안기능.
소프트웨어 개발의 구현 단계에서 코딩하는 기능을 올바르게 구현하기 위한 보안 점검 항목.

점검 항목.
적절한 인증없이 중요 기능 허용.
부적절한 인가.
중요한 자원에 대한 잘못된 권한 설정.
취약한 암호화 알고리즘 사용.
중요 정보 평문 저장 및 전송.
하드 코드 된 비밀번호.



 # 시간 및 상태.

시간 및 상태.
동시 수행을 지원하는 병렬 처리 시스템에서 시스템이 원활하게 동작되도록 하기 위한 보안 검증 항목.

시간 및 상태 보안 약점.
TOCTOU 경쟁 조건 : 검사 시점과 사용 시점을 고려하지 않고 코딩학는 경우 발생.
종료되지 않는 반복문 또는 재귀 함수 : 반복문이나 재귀 함수에서 종료 조건을 잘 정의하지 않았을 때 발생.



 # 에러 처리.

에러 처리.
오류들을 사전에 정의하여 오류로 인해 발생할 수 있는 문제들을 예방하기 위한 보안 점검 항목.

에러 처리 보안 약점.
오류 메시지를 통한 정보노출 : 오류 발생으로 실행 환경, 사용자 정보 등의 중요 정보 외부에 공개.
오류 상황 대응 부재 : 예외처리를 하지 않았거나 미비로 인해 발생하는 보안 약점.
부적절한 예외처리 : 오류들을 세분화하여 처리하지 않고 광범위하게 묶어 한 번에 처리 한 경우.



 # 코드 오류.

코드 오류.
개발자들이 하하기 쉬운 형 변환, 자원 반환 등의 오류를 예방하기 위한 보안 점검 항목.

코드 오류 보안 약점.
널 포인터 역 참조 : 널 포인터가 가리키는 메모리에 어떠한 값을 사용하려고 할 때 발생.
부적절한 자원 해제 : 자원을 반환하는 코드를 누락하거나 오류로 자원을 반환하지 못했을때 발생.
해제된 자원 사용 : 이미 사용이 종료되어 반환된 메모리를 참조하는 경우 발생하는 보안 약점.



 # 캡슐화.

캡슐화.
정보 은닉이 필요한 데이터와 기능을 불충분하게 캡슐화하거나 잘못 사용을 예방하기 위한 보안 점검.

캡슐화 보안 약점.
잘못된 세션에 의한 정보 노출 : 멀티 쓰레드 환경에서 멤버 변수에 정보를 저장할 떄 발생.
제거되지 않고 남은 디버그 코드 : 버그 수정이나 결과값 확인을 위해 남겨둔 코드들로 발생.
시스템 데이터 정보 노출 : 시스템의 내부 정보를 외부로 출력하도록 코딩했을 때 발생.
Public 메소드로부터 반환된 Private 배열 : public 메소드에서 private 배열을 반환할때 발생.
private 배열에 public 데이터 할당 : private 배열에 public 데이터를 저장할 때 발생.



 # API 오용.

API 오용.
잘못된 API나 보안에 취약한 API를 사용하지 않도록 하기 위한 검증 항목.

API 오용 보안 약점.
DNS Lookup에 의존한 보안 결정 : 도메인 명에 의존하여 인증 등의 보안 결정을 내리는 경우 발생.
취약한 API 사용 : 보안 문제로 사용이 금지된 API를 사용, 잘못된 API를 사용했을때 발생.



 # 암호화 알고리즘.

암호화 알고리즘.
중요정보를 보호하기 위해 평문을 암호화된 문장으로 만드는 절차 또는 방법을 의미.

암호화 종류.
개인키 암호화 기법 : 동일한 키로 데이터를 암호화하고 복호화한다.
공개키 암호화 기법 : 공개키, 비밀키 2가지 키로 암호화하고 복호화한다. ( 공개키는 공개 가능 )

해시.
임의의 길이의 입력 데이터나 메시지를 고정된 길이의 값이나 키로 변환하는 것을 의미.



 # 서비스 거부 공격.

DoS Denial of Service.
시스템을 악의적으로 공격해 해당 시스템의 자원을 부족하게 하여 의도된 용도로 사용하지 못하게 함.

DoS 종류.
Ping of Death : 패킷의 크기를 인터넷 프로토콜 허용 범위 이상으로 전송해서 네트워크를 마비.
Smurf Attack : 엄청나게 많은 양의 데이터를 집중적으로 보내 네트워크를 마비.
SYN Flooding Attack : 가상의 클라이언트가 TCP를 의도적으로 중단시켜 서버가 무한 대기 상태.
Tear Drop Attack : 조작된 일련의 IP 패킷 조각들을 전송해 OS를 다운시키는 공격.
Local Area Network Denial Attack : 공격자가 출발지 주소나 포트를 임의로 변경해 마비.
DDoS( Distributed Denial of Service ) : 하나의 서버에 대해 분산 Dos 공격을 수행하는 것.
 


 # 네트워크 침해 공격.

네트워크 침해 공격 유형.
Smishing : 각종 행사 안내 등을 이용해 개인 신용 정보를 빼내는 공격 기법이다.
Spear Phishing : 특정 대상을 선정한 후 지속적으로 메일을 발송해 개인 정보를 탈취하는 방법.
APT( Advanced Persistent Threats ) : 조직적으로 특정 기업 등을 침투해 정보를 탈취.
무작위 대입 공격( Brute Force Attack ) : 암호키를 찾아내기 위해 적용 가능한 모든 값을 대입.
큐싱( Qshing ) : QR code를 통해 악성 앱의 다운로드를 유도를 통해 정보 탈취.
SQL 삽입 : SQL을 삽입하여 DB를 조회하는 방법.
XSS( Cross Site Scripting ) : 웹 페이지에 악의적인 스크립트를 삽입하여 정보 탈취.
Sniffing : 네트워크의 중간에서 남의 패킷 정보를 도청하는 해킹 유형. ( 수동적 공격 )



 # 정보 보안 침해.

Back Door.
시스템 설계자나 관리자에 의해 고의로 남겨진 시스템의 보안 헛점이다.
인증 등 정상적인 절차를 걸치지 않고 응용 프로그램 또는 시스템에 접근 할 수 있다.

C & C 서버.
해커가 원격지에서 감염된 좀비 PC에 명령을 내리고 악성코드를 제어하기 위한 용도로 사용하는 서버.

좀비 PC.
악성코드에 감염되어 다른 프로그램이나 컴퓨터를 조종하도록 만들어진 컴퓨터.

봇넷 Botnet.
악성 프로그램에 감염된 다수의 컴퓨터들이 네트워크로 연결된 상태.

Worm.
네트워크를 통해 자신을 복제하여 시스템의 부하를 높여 시스템을 다운시키는 바이러스의 일종.

트로이 목마 Trojan Horse.
정상적인 기능을 하는 프로그램으로 위장하여 있다가 원하는 프로그램이 실행되면 부작용을 일으킴.

Ransomeware.
컴퓨터 시스템을 감염시켜 내부 파일을 인질로 잡아 몸값을 요구하는 악성 소프트웨어.
Ransom( 몸값 ) + software( 소프트웨어 )가 합쳐진 합성어이다.
모바일 환경에서도 발생할 수 있다.

제로 데이 공격 Zero Day Attack.
보안 취약점이 알려지기 전에 이미 신속하게 공격이 들어왔음을 의미한다.

키로거 공격 Key Logger Attack.
키보드 움직임을 탐지해 ID, 비밀번호 등과 같은 중요 정보를 몰래 빼가는 해킹 공격. 



 # 보안 통신 규약.

IPser.
IP 계층에서 통신 세션의 각 IP 패킷을 암호화하고 인증하는 안전한 IP 통신을 위한 프로토콜.

SSL.
전송 계층 보안은 네트워크 통신 보안을 제공하기 위해 설계된 암호 규약.
TCP / IP 네트워크를 사용하는 통신에 적용되며 통신 과정에서 보안과 데이터 무결성을 확보.

S-HTTP
웹 상에서 네트워크 트래픽을 암호화하는 주요 방법 중 하나.

데이터 익명화.
개인 식별 정보를 삭제하거나 수정하는 데이터 처리 기술.



 # Server Authentication.

인증 Authentication.
로그인을 요청한 사용자의 정보를 확인하고 접근 권한을 검증하는 보안 절차.

유형.
지식 기반 인증( Something You Know ) : 사용자가 기억하고 있는 정보를 기반으로 인증을 수행.
소유 기반 인증( Something You Have ) : 사용자가 소유하고 있는 것을 기반으로 인증을 수행.
생체 기반 인증( Something You Are ) : 사용자의 고유한 생체 정보를 기반으로 인증을 수행.
행위 기반 인증( Something You Do ) : 사용자의 행동 정보를 이용해 인증을 수행.
위치 기반 인증( Somewhere You Are ) : 위치의 적절성을 통해 인증을 수행.

보안 서버.
개인 정보를 암호화하여 송수신 할 수 있는 기능을 갖춘 서버.
서버에 SSL 인증서를 설치하여 전송 정보를 암호화 해서 송수신.



 # 보안 아키텍쳐.

보안 아키텍쳐.
보안 요소 및 보안 체계를 식별하고 이들 간의 관계를 정의한 구조.

보안 프레임 워크.
안전한 정보 시스템 환경을 유지하고 보안 수준을 향상 시키기 위한 체계.



 # 로그 분석.

로그.
시스템 사용에 대한 모든 내역을 기록해 놓은 것.
시스템 침해 사고 발생 시 해킹 흔적이나 공격 기법을 파악할 수 있다.

리눅스 로그.
var / log 디렉토리에 여러가지 로그 파일을 생성.

리눅스 로그 종류.
커널 로그 : 커널에 관련된 내용으로 관리자에게 알리기 위해 지정된 장치에 표시.
부팅 로그 : 부팅 시 나타나는 메시지들을 기록.
크론 로그 : 작업 스케쥴러인 crond의 작업 내역을 기록.
시스템 로그 : 커널에서 실시간으로 보내온 메시지를 기록.
보안 로그 : 시스템의 접속에 대한 로그를 기록.
FTP 로그 : FTP로 접속하는 사용자에 대한 로그를 기록.
메일 로그 : 송수신 메일에 대한 로그를 기록.

윈도우 로그.
이벤트 뷰어를 통해 확인 가능.

윈도우 로그 종류.
응용 프로그램.
보안.
시스템.
Setup.
Forwarded Events.



 # 보안 솔루션.

침입 탐지 시스템 IDS ( Intrusion Detection System ) 
해커 침입 패턴에 대한 추적과 유해 정보 감시를 통해 시스템의 이상을 실시간으로 탐지하는 시스템.

침입 방지 시스템 IPS ( Intrusion Prevention System ) 
방화벽과 침입 탐지 시스템을 결합한 것.

데이터 유출 방지 DLP ( Data Leakage / Loss Prevention ) 
내부 정보의 외부 유출을 방지하는 보안 솔루션.

웹 방화벽 ( Web Firewall )
일반 방화벽이 탐지하지 못하는 SQL 삽입 공격, XSS 등의 웹 기반 공격을 방어할 목적으로 만들어짐.

VPN.
인터넷 등 공중 네트워크와 암호화 기술을 이용하여 전용 회선을 사용하는 것처럼 해주는 보안 솔루션.

NAC ( Network Access Control ).
내부 PC의 MAC 주소를 IP 관리 시스템에 등록한 후 일관된 보안 관리 기능을 제공하는 보안 솔루션.

ESM ( Enterprise Security Management )
로그 및 보안 이벤트를 통합하여 관리하는 보안 솔루션.


 
 # 취약점 분석 및 평가.

취약점 분석 및 평가 항목.
범위는 정보 시스템과 정보 시스템 자산에 직간접적으로 관여된 분야.
평가의 기본 항목은 상 / 중 / 하 3단계로 중요도를 분리.

수행 절차 및 방법.
취약점 분석 및 평가 계획 수립.
취약점 분석 및 평가 대상 선별.
취약점 분석 수행.
취약점 평가 수행.











