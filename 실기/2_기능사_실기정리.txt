
 기능사 실기 정리.


 # 제 1과목 응용소프트웨어 기초.

4~6문제.
운영체제 특징, 명령어.
데이터베이스의 개념.
네트워크의 개념.



 # 운영체제.

운영체제.
처리능력향샹, 응답시간단축, 사용가능도 증대, 신뢰도 향상.

WINDOWS.
Windows 10 HOME : 가장 일반적인 Windows 
Windows PRO : 10 HOME + 성능향상과 보안기능을 추가. 

Windows Pro 기술.
BitLocker 장치 암호화 : 시스템 드라이브나 usb 이동저장장치에 암호를 설정하는 기능.
Windows Information Protection : 컴퓨터 작업 환경에 변화 없이 데이터의 유출을 막는 기술.

Windows 기본명령어. ( CLI )
COPY : 파일 복사.
DEL : 파일 삭제.
DIR : 파일 목록 확인.
REN : 파일 이름 변경.
TYPE : 텍스트 파일의 내용을 화면에 표시.
ATTRIB : 파일 속성 변경.
MOVE : 파일, 디렉토리 변경 및 이동.
FIND : 특정 문자열 검색.
MD : 디렉토리 생성.
CD : 디렉토리 변경.
RD : 디렉토리 삭제.
CLS : 화면의 내용을 지움.
DATE : 현재 날짜와 시간을 표시.
FORMAT : 디스크 포맷( 초기화 )
CHKDISK : 디스크 상태 점검하여 손상부분 복구.

UNIX 주요 명령어. ( LINUX 거의 같음 )
chmod : 파일 사용허가 및 파일, 디렉토리의 속성 변경지정.
ls : 지정한 디렉토리의 파일 목록을 보여줌.
cp : 파일 복사 명령.
mv : 파일 및 디렉토리 이동 및 이름변경.
rm : 파일 삭제 명령.
cat : 파일의 내용을 화면에 표시.
cd : 디렉토리 경로 변경.
mkdir : 디렉토리 생성.
rmdir : 디렉토리 삭제.
pwd : 현재 디렉토리의 경로 표시.
passwd : 로그인할 때 사용자 각각의 비밀번호 설정 및 변경.
who : 현재 시스템에 접속한 사용자 표시.
ping : 네트워크상의 다른 컴퓨터들의 연결상태 점검.
shutdown : 작업중인 상태를 체계적으로 종료.
kill : 프로세스 강제 종료.
close : 파일 닫기.
ps : 프로세스 상태 보기.
finger : 시스템에 접속된 사용자 정보 조회.
chown : 파일의 소유권변경.
sleep : 프로세스 수행을 일시 중지.
read : 파일내용을 순차적으로 읽기.
write : 파일에 내용을 순차적으로 기록.


 # 데이터베이스. 

DBMS.
자료처리 시스템의 문제점인 자료의 종속성과 중복성을 해결하기 위한 소프트웨어 시스템.
모든 응용 프로그램들이 데이터베이스를 공용할 수 있도록 관리해준다.

DBMS 필수기능.
정의 : 데이터베이스에 저장될 데이터의 타입과 구조에 대한 정의.
조작 : 데이터 삽입, 삭제, 갱신과 조회.
제어 : 데이터 무결성과 보안을 유지하기위한 기능.

DBA.
데이터베이스 시스템의 전체적인 관리 및 운영을 책임지는 사람이나 그룹을 의미.
데이터의 저장 구조와 접근방법을 결정.
시스템 보안과 무결성을 책임지며, 스키마를 정의.
데이터 사전을 구성하고 유지관리.

릴레이션. ( = 테이블 )
2차원 테이블 형태로 구조.
릴레이션 구조 -> 릴레이션 스키마
릴레이션의 구체적인 값 -> 릴레이션 인스턴스.

릴레이션 구성.
열의 이름을 어트리뷰트( 속성 = 필드 = column = 차수 )라고 하며, 하나의 도메인과 연결.
도메인 : 애트리뷰트에서 표현가능한 값의 범위.
한 릴레이션에서 애트리뷰트의 이름은 모두 다르다.
튜플 = 행 = 레코드 = 카디널리티. ( 행의 수 = 기수 ) 
어트리뷰트 = 속성 = 필드 = 열. ( 열의 수 = 차수 )

키.
슈퍼키 : 유일성은 만족하지만 최소성은 만족하지 않는 키.
후보키 : 한 테이블에서 유일성과 최소성을 만족하는 키.
기본키 : 후보키 중에서 선정되어 사용되는 키로 절대 널이 될 수 없으며 중복될 수 없다.
외래키 : 테이블간의 관계를 표현할 때 사용하며, 다른 테이블의 기본키를 참조하여 컬럼으로 사용.
대체키 : 후보키 중에서 기본키를 제외한 나머지 키.



 # 네트워크.

IPv4
32비트로 IP주소 체계이다.
' . ' 으로 구분한다.

IPv6
IPv4의 주소 공간을 4배 확장한 것으로 128비트 체계의 16진수로 표기. 
' : ' 으로 구분한다.
종류 : 유니 캐스트, 애니 캐스트, 멀티 캐스트.

OSI 7계층.
물리계층 : 물리적 매체를 통한 전송.
데이터링크계층 : 오류없이 데이터 전달할 수 있도록 함. ( 프레임 )
네트워크계층 : 패킷을 목적지까지 전달하는 역할. IP, X.25 ( 패킷 ) 
전송계층 : 시스템 종단간 오류수정, 신뢰성있고 정확한 데이터 전송 역할 수행. TCP, UDP.
세션계층 : 동기 제어, 데이터 회복.
표현계층 : 암호화, 압축, 코드변환, 구문검색.
응용계층 : 서비스를 제공.



 # 프로그래밍 언어 활용.

구조
/* 내용 */                	주석문.
#include <stdio.h>  	헤더파일.
void main( void ) 		main함수 시작.
{
	실행할내용 ;	함수에서 실행할 내용.
}



 # 애플리케이션 테스트.

애플리케이션 테스트.
개발된 소프트웨어가 고객의 요구사항을 만족시키는지 확인.
소프트웨어가 예상대로 정해진 기능을 정확히 수행하는지 검증.

애플리케이션 테스트 기본 원리.
결합집중 : 대다수의 결함들은 개발자나 애플리케이션 특성으로 인해 특정 모듈에서 집중적으로 발생.
정황에 의존 : 소프트웨어 특징, 테스트 환경, 테스터 역량 등 정황에 따라 테스트를 다르게 진행.
오류-부재의 궤변 : 소프트웨어가 요구사항을 만족시키지 못하면 오류가 없더라도 품질이 낮다.
살충제 페러독스 : 동일한 테스트 케이스로 반복적으로 수행하면 새로운 결함을 찾을 수 없음.
볼완전 : 모든 가능성을 테스트하는 것은 불가능.
결함 발견을 위한 활동 : 소프트웨어에 결함이 발견되지 않아도 결함이 없다고 할 수는 없다.

화이트박스 테스트.
개발자 위주 테스트.
설계된 절차에 초점을 맞춘 구조적 테스트며 테스트 과정의 초기에 적용한다.
모듈 안의 작동을 직접 관찰할 수 있다.
원시 코드의 모든 문장을 한 번 이상 수행함으로써 진행된다.
종류 : 기초경로검사, 제어구조검사, 데이터흐름검사, 조건 검사, 루프검사, 분기검사 등.

블랙박스 테스트.
사용자 위주 테스트.
소프트웨어가 수행할 특정 기능을 알기 위해 각 기능이 완전히 작동되는 것을 입증하는 검사.
데이터 위주 또는 입출력위주 검사이다.
각 산출물의 기능별로 적절한 정보 영역을 정하여 적합한 입력에 대한 출력의 정확성을 점검.
종류 : 동치 분할 검사, 경계값 분석, 효과 그래프 검사, 경계값 분석, 비교 테스트, 오류 예측 검사.

단계별 소프트웨어 검사.
단위 테스트 : 소스 코드에 대한 분석을 진행.
통합 테스트 : 통합된 모듈, 컴포넌트 간의 오류를 테스트.
시스템 테스트 : 소프트웨어가 해당 컴퓨터 시스템에서 제대로 수행되는지 테스트.
인수 검사 : 사용자의 요구사항을 만족시키는가에 중점을 둔 검사기법. 개발 완료 후 진행하는 검사.

인수검사 종류.
형상검사 : 모든 사항들이 제대로 표현되었는지를 검사.
알파검사 : 제한된 환경에서 사용자가 개발자의 환경에서 프로그램을 실행하는 테스트. 
베타검사 : 제한되지 않은 환경에서 사용자가 프로그램을 실행하는 테스트.



 # SQL 활용.

DDL.
Data Definition Language : 스키마, 도메인, 테이블, 뷰 등을 정의하거나 변경, 제거할때 사용.
Create, Alter, Drop.

DML.
Data Manipulation Language : 테이블 내의 레코드를 추가, 변경, 제거, 검색하기 위한 언어.
select, insert, update, delete.

DCL.
Data Contrl Language : 데이터베이스 보안, 무결성을 유지하기 위한 언어.
grant, revoke, commit, rollback.

CRUD.
select * from 테이블이름 where 조건 group by 조건 having order by desc ;
insert into 테이블이름 values( 콜롬 ) ;
update 테이블이름 set 콜롬 = 값 ;
delete from 테이블이름 where 조건 ;

테이블 생성.
create table 테이블이름(
	콜롬1 타입 primary key, 
	콜롬2 타입 references 참조테이블( 참조테이블콜롬 )
)

뷰 정의.
하나 이상의 기본 테이블로부터 유도되는 가상테이블.

뷰 생성.
create 뷰 뷰이름
as
select * from 테이블이름 where 조건 ;



