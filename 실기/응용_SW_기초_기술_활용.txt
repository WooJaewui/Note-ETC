
 응용 SW 기초 기술 활용.



 # 운영체제.

운영체제 목적.
처리 능력( Throughput ) : 일정 ㅅ기나 내에 시스템이 처리하는 일의 양.
반환 시간( Turn Around Time ) : 시스템에 작업을 의뢰한 시간부터 완료될 때까지 걸린 시간.
사용 가능도( Availability ) : 즉시 사용 가능한 정도.
신뢰도( Reliability ) : 문제를 정확하게 해결하는 정도.

운영체제 기능.
프로세서, 기억장치, 입 출력장치, 파일 및 정보 등의 자원 관리.
사용자와 시스템 간의 편리한 인터페이스 제공.

MS - Window.
GUI : 마우스로 아이콘이나 메뉴를 선택하여 작업을 수행하는 형식.
선점형 멀티 태스킹( Preemptive Multi-Tasking ) : 동시에 여러 개의 프로그램을 실행.
PnP( Plug and Play ) : 하드웨어를 설치했을 때 하드웨어를 사용하는 데 필요한 시스템을 자동으로 구성.
OLE( Object Linking and Embedding ) : 개체를 아무 문서에나 자윱롭게 연결하거나 삽입하여 편집.

UNIX.
시분할 시스템을 위해 설계된 대화방식이다.
대부분 C언어로 작성되어 이식성이 높다.
다중 사용자, 다중 작업을 지원.
트리 구조의 파일 시스템.

LINUX.
UNIX와 완벽하게 호환되고, 대부분의 특징이 UNIX와 동일.

Mac OS X.
Apple 만든 UNIX 기반의 PC용 운영체제.

iOS
Apple 만든 UNIX 기반의 모바일 운영체제.

Android.
Linux 기반의 모바일 운영체제.



 # 운영체제 관련 용어.

커널( Kernel ).
하드웨어를 보호( 캡슐화 )하고, 프로그램들과 하드웨어 간의 인터페이스 역할.

쉘( Shell ).
사용자의 명령어를 인식하여 프로그램을 호출하고, 명령을 수행하는 명령어 해석기.
시스템 사용자 간의 인터페이스를 담당.

Utility.
사용자의 편리성을 향상하는 유용하고 실용적인 소프트웨어.

환경 변수.
시스템 소프트웨어의 동작에 영향을 미치는 동적인 값들의 모임.
시스템의 기본 정보를 저장하는 용도로 사용 가능.



 # 운영체제 CLI 명령어.

윈도우 CLI 명령어.
dir : 현재 디렉토리의 파일 목록 표시.
copy : 파일 복사.
del : 파일 삭제.
ren : 파일 이름 변경.
cd : 동일한 드라이브에서 디렉토리 위치 변경.
chkdsk : 디스크 상태 점검.

UNIX / LUNUX의 CLI 기본 명령어.
cat : 파일 내용을 화면에 표시.
chmod : 파일의 보호 모드를 설정하여 파일 사용 허가 지정.
fsck : 파일 시스템 검사 및 보수.
mkdir : 디렉토리 생성.



 # 프로세스.

프로세스.
프로세서에 의해 처리되는 프로그램으로 실행중인 프로그램을 의미한다.

PCB Process Control Block.
프로세스에 대한 정보를 저장한 개체.

상태 전이.
제출( submit ) : 작업을 처리하기 위해 사용자가 작업을 시스템에 제출한 상태.
접수( hold ) : 제출된 작업이 스풀 공간인 디스크의 할당 위치에 저장된 상태.
준비( Ready ) : 할당 받기 위해 기다리고 있는 상태.
실행( Run ) : 준비상태 큐에 있는 프로세스가 프로세서를 할당 받아 실행되는 개념.
대기( Wait ), 블록( Block ) : 현재 실행 중인 프로세스가 중단되고 입 출력 처리가 완료될 때까지 대기.
종료( Terminated, exid ) : 프로세스의 실행이 끝나고 프로세스 할당이 해제 된 상태.

프로세스 상태 전이 관련 용어.
Dispatch : 준비 상태에서 대기하다가 실행 상태로 전이되는 과정.
Wake up : 프로세스가 대기 상태에서 준비 상태로 전이되는 과정.
Spooling : 한꺼번에 입 출력하기 위해 디스크에 저장하는 과정.
문백 교환( Context Switching ) : 현재 CPU가 할당된 프로세스의 정보 저장, 새로운 CPU 할당.
Traffic Controller : 프로세스의 상태에 대한 조사와 통보 담당.

쓰레드.
프로세스 내에서 실행되는 흐름의 단위.
독립적인 스케쥴링 단위.
멀티 쓰레드 : 하나의 프로세스에서 둘 이상의 쓰레드를 동시에 실행.



 # CPU 스케쥴링.

스케쥴링.
프로세스가 생성되어 실행될 때 필요한 시스템의 여러 자원을 해당 프로세스에게 할당.

스케쥴링 종류.
장기 : 시스템 자원을 사용할 수 있는지 결정.
중기 : CPU가 할당될 프로세스 결정.
단기 : 실행 시간과 실행할 프로세스 지정.

스케쥴링의 목적.
공정성 , 처리율 증가 , CPU 이용률 증가 , 오버헤드 최소화 , 응답 시간 최소화 , 무한 대기 회피.

스케쥴링의 성능 평가 항목.
CPU 이용률 : CPU의 낭비 시간을 줄이고, 순수하게 프로세스를 실행하는 비율을 높임.
처리율 : 단위 시간당 프로세스를 처리하는 비율.
반환 시간 : 프로세스를 제출한 시간부터 실행이 완료될 때까지 걸리는 시간.
대기 시간 : 준비상태 큐에서 대기하는 시간으로 최소화.
응답 시간 : 작업을 지시하고, 반응하기 시작하는 시간으로 최소화.

스케쥴링 방식.
선점 스케쥴링( preemptive ) : 한 프로세스가 실행될 때 우선순위가 높은 다른 프로세스가 실행되면 바로 실행.
비선점 스케쥴링( nonpreemptive ) : 한 프로세스가 실행되면 다른 프로세스는 CPU를 점유 할 수 없다.
노화 기법( aging ) : 기다리고 있는 시간에 비례하여 높은 우선순위를 부여.

비선점 방식.
우선순위 스케쥴링 : 프로세스에게 우선순위를 부여하여 높은 순서대로 처리.
기한부 스케쥴링 : 작업을 명시된 시간이나 기한 내에 완료되도록 계획.
FIFO 스케쥴링 : 프로세스들은 대기 큐에 도착한 순서대로 CPU를 할당.
SJF 스케쥴링 : 작업 수행시간이 가장 짧다고 판단되는 것을 먼저 수행.
HRB 스케쥴링 : 긴 작업과 짧은 작업간의 불평들을 어느 정도 보완한 기법.

선점 방식.
라운드로빈 스케쥴링 : 프로세스는 같은 크기의 CPU 시간을 할당받는 방식이다.
SRT 스케쥴링 : 가장 짧은 시간이 소요된다고 판단되는 프로세스를 먼저 수행.
다단계 큐 : 프로세스를 그룹으로 분류할 수 있을 경우 그 그룹에 따라 다른 준비상태 큐를 사용.



 # 교착 상태.

용어.
임계 영역( Critical Section ) : 공유 자원을 사용하는 코드 영역.
상호 배제( Mutual Exclusion ) : 한 번에 한 개의 프로세스만이 공유 자원을 수정.

교착상태.
프로세스들이 자원을 점유한 상태에서 서로 다른 프로세스가 점유하는 있는 자원을 요구하며 기다리는 현상.

교착상태 발생의 필요 충분 조건.
상호 배제 : 한 번에 여러 개의 프로세스가 공유 자원을 사용할 수 없음.
점유와 대기 : 최소한 하나의 자원을 점유하고 다른 프로세스에 할당되어 있고 추가로 점유하기 위해 대기.
비선점 : 다른 프로세스에 할당된 자원은 사용이 끝날때까지 강제로 뺏을 수 없는 기법.
환형 대기 : 프로세스들이 원형으로 구성되어 있어 자원을 점유하면서 뒤에 있는 프로세스의 자원을 요구.

교착상태 해결 방안.
예방 기법 : 교착상태가 발생하지 않도록 사전에 시스템을 제어.
회피 기법 : 교착상태가 발생하면 적절히 피해나가는 방법. ( 주로 Banker's Algorithm을 사용 )
발견 기법 : 교착 상태가 발생했는지 점검하여 발견하고 해결.
회복 기법 : 교착 상태를 일으킨 프로세스를 종료하거나 선점하여 자원을 회복.



 # 주기억 장치 관리.

주기억 장치.
실행을 위해서 일시적으로 저장하는 기억 장치. 보조기억 장치는 반 영구적인 기억 장치.

주기억 장치 관리 전략.
반입 전략( Fetch ) : 보조기억장치에 프로그램을 언제 주기억장치로 적재할 것인지 결정하는 전략.
배치 전략( Placement ) : 새로 반입되는 프로그램을 주기억장치 어디에 위치시킬 것인지 결정.
교체 전략( Replacement ) : 모든 영역이 사용중일 때 주기억장치 어떤 프로그램을 교체할 것인지 결정.

할당 기법.
단일 할당 : 하나의 프로그램만 할당.
연속 할당 : 연속으로 할당하는 기법.
분산 할당 : 프로그램을 특정 단위의 조각으로 나누어 분산하여 할당.



  # 가상 기억 장치.

가상기억장치.
보조기억장치의 일부를 주기억장치처럼 사용하는 것이다.

단편화 Fragmentation.
기억장치를 사용하지 못하고 남는 것.
내부 단편화 : 하나의 페이지를 사용하고 남는 공간.
외부 단편화 : 작아서 사용하지 못하는 공간.

가상 기억장치 구현 기법.
페이징 기법 : 프로그램과 주기억장치의 영역을 동일한 크기로 나눈 후 적재. 외부 단편화 X.
세그먼테이션 기법 : 프로그램을 다양한 크기로 나눈 후 적재시키는 방법. 내부 단편화 X.

가상 기억장치 특성.
Locality : 프로세스가 실행되는 동안 일부 페이지만 집중적으로 참조하는 성질.
워킹 셋 : 프로세스가 일정 시간 동안 자주 참조하는 페이지들의 집합.
페이지 부재 : 참조할 페이지가 주기억장치에 없는 현상.
쓰레싱( Thrashing ) : 프로세스 처리 시간보다 페이지 교체에 소요되는 시간이 더 걸리는 현상.
Prepaging : 페이지 부재를 방지하기 위해 모든 페이지를 적재하는 기법.

페이지 교체 알고리즘.
OPT( Optimal replacement ) : 가장 오랫동안 사용하지 않을 페이지를 교체하는 기법.
FIFO : 가장 먼저 들어온 페이지를 교체하는 방법.
LRU( Last Recently Used ) : 최근 가장 오랫동안 사용되지 않은 페이지를 교체.
LFU( Last Frequently Used ) : 최근 가장 적게 사용된 페이지를 교체.
NUR( Not Used Recently ) : 최근에 사용하지 않은 페이지를 교체.
SCR( Second Change Replacement ) : 가장 오랫동안 있던 페이지 중 자주 사용되는 페이지의 교체를 방지.



 # 디스크 스케쥴링.

FCFS 스케쥴링 : 먼저 들어온 것을 먼저 처리.
SSTF( Shortest Seek Time First ) 스케쥴링 : 탐색 거리가 가장 짧은 요청을 먼저 처리.
SCAN 스케쥴링 : 헤드진행 방향과 같은 방향의 가장 짧은 거리에 있는 요청을 서비스.
C-SCAN( Circular ) 스케쥴링 : 바깥쪽 실린더에서 안쪽으로 진행하면서 최단거리 요구를 서비스.
N-step SCAN 스케쥴링 : 서비스가 한쪽 방향으로 진행될 때 대기중이던 요구들만 서비스.
에센바흐 기법( Eshenbach scheme ) : 전체 트랙이 한 바퀴 회전할 동안 서비스.
SLTF( Shortest Latency Time First ) : 회전지연시간의 최적화를 위한 기법.



 # 네트워크.

기본개념.
네트워크 : 사용자들 간에 하드웨어와 소프트웨어를 공유할 수 있도록 서로 연결된 노드들의 모임.
Protocol : 데이터 송수신을 위한 규칙. TCP ( 연결형 ), UDP ( 비연결형 )
TCP/IP : 호스트들을 서로 연결시키는데 필요한 프로토콜.
HTTP : Hyper Text Transfer Protocol.
HTTPS : Hyper Text Transfer Protocol over Secure Socket Layer.
IP주소 : 인터넷에서 단말기를 구별하기 위한 주소( IPv4 - 32비트, IPv6 - 128비트 )
Subnet mask : 네트워크를 작은 네트워크로 나누어서 사용할 목적으로 설정.
PORT : 하나의 ip주소에서 프로세스를 구분하기 위한 번호. 
Domain : ip 주소에 매핑시킨 문자로 된 주소.
URL : 인터넷 상의 자원의 위치.
URI : 특정 자원에 대한 형식이나 고유한 이름.
Gateway : 외부 네트워크로 나가기 위한 내부 네트워크의 종단점.
Routing : 최적의 경로를 찾는 방법.
Proxy : 다른 네트워크 서비스에 간접적으로 접속할 수 있게 해주는 컴퓨터 시스템.
Firewall : 보안 규칙에 기반해 데이터를 검열, 수정하는 하드웨어 또는 소프트웨어 장치.
RMI : 분산 네트워크 내에서 상호 작용하는 객체지향 형 프로그램. ( RPC 라고도 함 )
IP 정보 확인 : ipconfig( windows ), ifconfig( windows가 아닌 경우 )
ping : IP 네트워크를 통해 호스트가 도달할 수 있는지의 여부를 테스트하는 데 쓰이는 컴퓨터 도구.
LoopBack IP : 자기 자신을 가리키기 위한 목적으로 쓰기 위해 예약된 IP주소( 127.0.0.1 )
오픈 API : 누구나 사용할 수 있도록 공개된 API.
REST( Representational State Transfer ) : 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처.
CSV : 구분자로 구분된 문자열.
XML : 태그 형식으로 데이터를 표현하는 포맷.
JSON : 자바스크립트 데이터 표현법으로 데이터를 표현하는 포맷.

PORT 번호.
시스템 예약 : http(80), FTP(20,21), SSH(22), Telnet(23), SMTP(25), DNS(53)
응용프로그램 : Tomcat(8080), Oracle(1521), Mysql(3306), MSSQL(1443)....



 # 통신망의 분류.

근거리 통신망( LAN - Local Area Network ) 
회사, 학교, 연구소 등에서 가까운 거리에 있는 컴퓨터, 프린터 등과 같은 자원을 연결하여 구성.
데이터의 전송 속도가 빠르고, 에러 발생율이 낮음.
주로 버스형이나 링형 구조를 사용.

광대역 통신망( WAN - Wide Area Network )
국가와 국가 등과 같이 멀리 떨어진 사이트들을 연결하여 구성.
통신 속도가 느리고, 에러 발생률이 높음.

인트라넷( intranet )
단체의 직원만 접근이 가능한 사설망.
인터넷 프로토콜을 쓰는 폐쇄적 근거리 통신망으로 간주된다.
인터넷을 조직 내 네트워크로 활용하는 것을 말한다.

클라우드 컴퓨팅.
클라우드를 통해 가상화된 컴퓨터의 시스템 리소스를 요구하는 즉시 제공하는 것.
정보를 자신의 컴퓨터가 아닌 클라우드에 연결된 다른 컴퓨터로 처리하는 기술.



 # Topology에 따른 분류.

Tree형 ( 계층형 ).
제어와 오류 해결을 중앙의 한 지점에서 수행하기 때문에 제어가 간단하고 확장이 용이.
중앙 지점에서 병목현상이 일어날 수 있다.

Bus형.
하나의 채널에 여러 대의 단말장치를 연결하는 구조.
관리가 용이하고 새로운 노드 삽입이 용이.
고장 시 네트워크 전체가 동작을 하지 않는다.

Start형 ( 성형 ).
중앙에 하나의 컴퓨터가 있고 이를 중심으로 모든 단말 장치들을 연결하는 구조.
계층형과 비슷하지만 분산 처리 능력에 제한이 있고 잠재적 병목성을 가진다.

Ring형.
데이터는 한 방향으로만 흐르고, 정해진 순간 한 개의 스테이션만이 수신.
고장으로 분리 운영되며 노드의 추가시 전체에 영향을 미침.

Mesh형 ( 망형 ).
모든 노드가 서로서로 연결이 되어서 연결비용이 많이 든다.
한 곳의 고장이 전체에 미치는 영향이 거의 없다.
회선수 = n * ( n - 1 ) / 2.



 # IP 관련.

IPv4.
숫자로 8비트씩 4부분, 총 32비트로 구성되어 있다.
Class A : 국가나 대형 통신망.
Class B : 중대형 통신망.
Class C : 소규모 통신망.
Class D : 멀티캐스트용.
Class E : 실험용으로 공용되지 않음.

IPv6.
현재 사용하고 있는 IP 주소 체계인 IPv4의 주소 부족 문제르르 해결하기 위해 개발.
16비트씩 8부분, 총 128비트로 구성.
각 부분을 16진수로 표현하고, ' : '으로 구분한다.
IPv4에 비해 자료 전송 속도가 빠르고, IPv4와 호환성이 뛰어나다.

서브넷 마스크.
4바이트의 IP 주소 중 네트워크 주소와 호스트 주소를 구분하기 위한 비트.

통신 방식.
유니캐스트( Unicast ) : 단일 송신자와 단일 수신자 간의 통신 ( 1:1 통신 )
멀티캐스트( Multicast ) : 단일 송신자와 다중 수신자(그룹) 간의 통신 ( 1:N 통신 )
애니캐스트( Anycast ) : 단일 송신자와 가장 가까이 있는 단일 수신자 간의 통신 ( 1:1 통신 )
브로드캐스트( BroadCast ) : 전체와 통신.

도메인 네임.
숫자로 된 IP 주소를 사람이 이해하기 쉬운 문자로 형태로 표현한 것.
호스트 컴퓨터 이름, 소속 기관 이름, 소속 기관의 종류, 소속 국가명 순으로 구성.
도메인 네임 시스템( DNS ) : 도메인 네임을 IP주소로 변환하는 역할을 하는 시스템.



 # 프로토콜.

프로토콜.
서로 다른 기기들 간의 데이터 교환을 원할하게 수행할 수 있도록 표준화시켜 놓은 통신 규약.

프로토콜의 3요소.
구문( Syntax ) : 전송하고자 하는 데이터의 형식, 부호화, 신호 레벨 등을 규정.
의미( Semantics ) : 효율적인 정보전송을 위한 협조 사항과 오류 관리를 위한 제어 정보를 규정.
시간( Timing ) : 두 기기 간의 통신 속도, 메시지의 순서 제어 등을 규정.

프로토콜 데이터 단위( PDU - Protocol Data Unit )
단편화를 통해 세분화된 데이터 블록.
송 - 수신 두 기기 사이에 교환되는 데이터의 단위.
2계층 - 프레임 , 3계층 - 패킷 , 4계층 - 세그먼트로 불린다.

프로토콜의 기능.
단편화( Fragmentation ) : 데이터를 작은 블록으로 자르는 작업.
재결합( Reassembly ) : 블록을 원래의 데이터로 모으는 작업.
캡슐화( Encapsulation ) : 프로토콜 제어 정보 등의 정보를 부가하는 것.
흐름 제어( Flow Control ) : 수신 측의 처리 능력에 따라 송신 측에서 데이터의 전송을 조절.
오류 제어( Error Control ) : 전송 중에 발생하는 오류를 검출하고 대비하는 기능.
동기화( Synchronization ) : 송 - 수신 측이 같은 상태를 유지하도록 타이밍을 맞추는 기능.
순서 제어 : 전송되는 데이터 블록( PDU )에 전송 순서를 부여하는 기능.
주소 지정 : 데이터가 목저지까지 정확하게 전송되도록 경로를 부여.
다중화( Multiplexing ) : 한 개의 통신 회선을 여러 가입자들이 동시에 사용하도록 하는 기능.
경로 제어( Routing ) : 송 - 수신 경로 중에서 최적의 패킷 교환 경로를 설정.
전송 서비스 : 전송하려는 데이터가 사용하도록 하는 별도의 부가 서비스.



 # OSI 참조 모델.

OSI 참조모델. Open System Interconnection.
다른 시스템 간의 원활한 통신을 위해 ISO( 국제 표준화 기구 )에서 제안한 통신 규약.
하위계층( 물리 계층, 데이터 링크 계층, 네트워크 계층 ). 
상위 계층( 전송 계층, 세션 계층, 표현 계층, 응용 계층 ).

물리계층 Physical Layer.
전송에 필요한 두 장치 간의 실제 접속, 절차적 특성에 대한 규칙을 정의함.

데이터 링크 계층 Data Link Layer.
두 개의 인접한 개방 시스템들 간에 신뢰성 있고 효율적인 전송을 할 수 있도록 제어. ( 프레임 )

네트워크 계층 Network Layer.
네트워크 연결을 관리하는 기능을 수행하는 계층. ( 패킷 )

전송 계층 Transport Layer.
종단 시스템 간의 전송 연결 설정, 데이터 전송, 오류 제어, 흐름 제어 등을 수행. ( 세그먼트 )

세션 계층 Session Layer.
송 - 수신 측 간의 관련성을 유지하고 대화 제어를 담당하는 계층.

표현 계층 Presentation Layer.
응용 계층에서 받은 데이터는 세션계층에 맞게 세션 계층에서 받은 데이터는 응용계층에 맞게 변경.

응용 계층 Application Layer.
사용자( 응용 프로그램 )가 OSI 환경에 접근할 수 있도록 서비스를 제공함.



 # TCP / IP.

TCP / IP - Transmission Control Protocol / Internet Protocol.
인터넷에 연결된 서로 다른 기종의 컴퓨터들이 데이터를 주고받을 수 있도록 하는 표준 프로토콜.

TCP Transmission Control Protocol.
신뢰성 있는 연결형 서비스를 제공.
스트림 전송 기능을 제공.

IP Internet Protocol.
데이터그램을 기반으로 하는 비연결형 서비스를 제공.

TCP / IP의 구조.
네트워크 액세스 계층( 물리 , 데이터 링크 ) : 실제 데이터를 송 - 수신 하는 역할.
인터넷 계층( 네트워크 ) : 데이터 전송을 위한 주소 지정.
전송 계층( 전송 계층 ) : 호스트들 간의 신뢰성 있는 통신을 제공.
응용 계층( 응용, 표현, 세션 ) : 응용 프로그램 간의 데이터 송 - 수신을 제공.

TCP / IP의 응용 계층 프로토콜.
FTP( File Transfer Protocol ) : 기기들 간의 파일을 주고 받을 수 있도록 하는 원격 파일 전송 프로토콜.
SMTP( Simple Mail Transfer Protocol ) : 전자 우편을 교환하는 서비스.
TELNET : 멀리 떨어져 있는 컴퓨터에 접속하여 자신의 컴퓨터처럼 사용할 수 있도록 해주는 서비스.
SNMP( Simple Network Management Protocol ) : 네트워크 관리 프로토콜.
DNS( Domain Name System ) : 도메인 네임을 IP 주소로 매핑하는 시스템.
HTTP( HyperText Transfer Protocol ) : HTML 문서를 송수신 하기 위한 표준 프로토콜.
HTTPS : HTTP의 보안이 강화된 버전.

전송 계층 프로토콜 - TCP( Transmission Control Protocol )
양방향 연결형 서비스를 제공.
가상 회선 연결( Virtual Circuit Connection ) 형태의 서비스를 제공.
스트림 위주의 전달( 패킷 단위 )
신뢰성 있는 경로를 확립하고 메시지 전송을 감독.

전송 계층 프로토콜 - UDP( User Datagram Protocol ).
연결을 설정하지 않는 비연결형 서비스를 제공.
TCP에 비해 단순한 헤더 구조를 가지므로 오버헤드가 적음.
신뢰성보다는 속도가 중요시되는 네트워크에서 사용.

전송 계층 프로토콜 - RTCP( Real-Time Control Protocol )
RTP( Real - Time Transport Protocol ) 패킷의 전송 품질을 제어하기 위한 제어프로토콜.
세션에 참여한 각 참여자들에게 주기적으로 제어 정보를 제공.

인터넷 계층 프로토콜.
IP : 주소 지정 및 경로 설정을 하며 비연결형인 데이터 그램 방식을 사용해서 신뢰성이 보장 X.
ICMP( Internet Control Message Protocol ) : IP와 조합하여 오류의 처리와 전송 경로 변경 등.
IGMP( Internet Group Management Protocol ) : 멀티캐스트 그룹 유지를 위해 사용.
ARP( Address Resolution Protocol ) : IP 주소를 물리적 주소( MAC Address )로 바꿈.
RARP( Reverse Address Resolution Protocol ) : ARP와 반대로 물리적 주소를 IP주소로 바꿈.



 # 네트워크 장비.

허브 Hub.
한 사무실이나 가까운 거리의 컴퓨터들을 연결하는 장치.
더미 허브( Dummy Hub ) : 네트워크에 흐르는 모든 데이터를 단순히 연결하는 기능.
스위칭 허브( Switching Hub ) : 네트워크상에 흐르는 데이터의 유무 및 흐름을 제어.

리피터 Repeater.
물리 계층의 장비로, 전송되는 신호가 왜곡되거나 약해질 경우 원래의 신호 형태로 재생.

브릿지 Bridge.
데이터 링크 계층의 장비로, LAN과 LAN을 연결하거나 LAN 안에서의 컴퓨터 그룹을 연결.

라우터 Router.
네트워크 계층 장비로, LAN과 LAN의 연결 및 경로 선택.

Load Balancer.
특정 서버에 집중되는 트래픽을 분산시켜 주는 장비.

게이트웨이 Gateway.
전 계층의 프로토콜 구조가 전혀 다른 네트워크의 연결을 수행함.

스위치 Switch.
브릿지와 같이 LAN과 LAN을 연결하여 훨씬 더 큰 LAN을 만드는 장치.



 # 교환 방식.

회선 교환 방식 Circuit Switching.
통신을 원하는 두 지점을 교환기를 이용하여 물리적으로 접속시키는 방식.
접속에 긴 시간이 소요되나 접속되면 전송 지연이 거의 없어 실시간 전송 가능.
공간 분할 교환 방식, 시분할 교환 방식이 있다.

패킷 교환 방식 Packet Switching.
메시지를 일정한 길이의 패킷으로 잘라서 전송하는 방식.
장애 발생 시 재전송을 위해 패킷 교환기에 일시 저장되었다가 곧 전송되며 전송 후 폐기.
패킷 교환망은 OSI 7계층의 네트워크 계층에 해당.
음성 전송보다 데이터 전송에 더 적합하다.
가상 회선 방식, 데이터그램 방식이 있다.



 # Switch.

Switch.
LAN과 LAN을 연결하여 더 큰 LAN을 만드는 장비.

L2 Switch.
OSI 2계층에 해당하는 장비로 일반적인 스위치.
MAC Address를 기반으로 프레임을 전송.
동일 네트워크 간의 연결에 이용.

L3 Switch.
OSI 3계층에 해달하는 장비.
IP Address를 기반으로 패킷을 전송.
서로 다른 네트워크 간의 연결에 이용.

L4 Switch.
OSI 4계층에 해당하는 장비로 로드 밸런싱을 수행할 수 있는 스위치.
IP 주소 및 TCP / UDP를 기반으로 사용자들의 요구를 서버의 부하가 적은 곳에 분배.

L7 Switch.
OSI 7계층 장비.
패킷 내용까지 이용해서 로드 밸런싱을 수행.

Switching 방식.
Store and Forwarding : 데이터를 모두 받은 후 스위칭.
Cut - through : 데이터의 목적지 주소 만을 확인한 후 바로 스위칭.
Fragment Free : 위 2개의 장점을 결합한 방식.

백본 스위치.
BackBone : 네트워크를 연결할 때 중추적 역할을 수행하는 네트워크.
BackBone에서 스위칭 역할을 하는 장비.
L3 스위치를 이용하는 경우가 많다.

Hierarchical 3 Layer 모델. 
Access Layer : 네트워크에 접속할 때 최초로 연결되는 지점. ( 주로 L2 )
Distribute Layer : 통신을 집약해서 코어 계층으로 전달 ( 주로 L3 )
Core Layer : Distribute Layer에서 오는 통신을 집약해서 인터넷에 연결. ( 백본 스위치 )



 # 라우팅.

라우팅.
송 - 수신 간의 전송 경로 중에서 패킷 교환 경로를 결정하는 기능.

거리 벡터 알고리즘 Distance Vector Algorithm.
인접해 있는 라우터 간의 거리와 방향에 대한 정보를 이용하여 최적의 경로를 찾는다.

링크 상태 알고리즘 Link State Algorithm.
라우터와 라우터 간의 모든 경로를 파악하여 미리 대체 경로를 마련해 두는 알고리즘.

라우팅 프로토콜.
RIP( Routing Information Protocol ) : 현재 가장 많이 사용. 소규모 네트워크.
IGRP( Interior Gateway Routing Protocol ) : 네트워크 상태를 고려하여 라우팅. 중규모 네트워크.
OSPF( Open Shortest Path First Protocol ) : 가장 가까운 Path에 먼저 라우팅. 대규모 네트워크.
EGP( Exterior Gateway Protocol ) : 자율 시스템 간의 라우팅 프로토콜.
BGP( Border Gateway Protocol ) : 자율 시스템 간의 라우팅 프로토콜, EGP의 단점을 보완.



 # 네트워크 제어.

트래픽 제어 Traffic Control.
흐름 제어 : 속도 조절.
혼잡 제어 : 특정 라우터에 패킷이 집중되어 오버플로우가 발생하는 것을 제어.
교착상태 방지.

흐름 제어 Flow Control.
송수신 측 사이에서 패킷의 양이나 속도를 규제하는 것.
정지 - 대기( Stop and wait ) : 하나의 프레임을 전송하고 다음 프레임 전송 전에 응답을 기다림.
슬라이딩 윈도우 : 버퍼를 두고 버퍼의 크기 만큼 전송 할 수 있는 형태.

폭주 제어 Congestion Control.
송수신 측 사이에서 패킷 수를 조절하여 네트워크 오버플로우를 방지하는 작업.
느린 시작( Slow Start ) : 윈도우의 크기를 지수적으로 늘여가는 방식으로 임계 값에 도달하면 혼잡.
혼잡 회피( Congestion Avoidance ) : 혼잡으로 간주되면 간주 회피를 위해 윈도우 크기를 1씩 증가.



 # 네트워크 신기술 용어.

ICT Information and Communication Technologies.
통합 커뮤니케이션 역할과 소프트웨어, 미들웨어, 스토리지, 오디오 비주얼 시스템을 강조하는 용어.

IoT Internet of Things.
무선 통신을 통해 각종 사물을 연결하는 기술.

M2M Machine to Machine.
사람과 사물, 사물과 사물 간 지능 통신 서비스.
사람이 직접 하기에 힘든 일들을 기계가 대신 수행 하는 것.
스마트 계량기, 자동 판매기, 보안 서비스 등.

모바일 컴퓨팅.
유용 기기로 이동하면서 자유로이 네트워크에 접속해서 업무를 처리할 수 있는 환경.

클라우드 컴퓨팅.
클라우드를 통해 가상화된 컴퓨터의 시스템 리소스를 요구하는 즉시 제공하는 것.

모바일 클라우드 컴퓨팅.
클라우드 컴퓨팅과 모바일 컴퓨팅의 결합이다.

인터 클라우드 컴퓨팅.
클라우드 안에 클라우드란 뜻으로 각기 다른 클라우드 서비스를 같이 사용할 수 있도록 연결하는 기술.

그리드 컴퓨팅.
분산되어 있는 컴퓨터를 고속 네트워크로 연결해서 고성능 컴퓨터처럼 활용하는 기술.

스마트 그리드.
정보통신기술을 통해 공급자와 소비자가 서로 상호작용함으로써 효율성을 높인 지능형 전력망 시스템.

Mesh Network.
각각의 노드가 네트워크에 대해 데이터를 릴레이 하는 네트워크 토폴로지.
모든 메시 노드들은 네트워크 내의 데이터 분산에 협업.
무선, 유선 망에 모두 적용이 가능.

유비쿼터스 Ubiquitous.
언제 어디서든 어떤 기기를 통해서도 컴퓨팅 할 수 있는 것을 의미한다.

Wi-SUN Wireless Smart Utility Network.
Wi-FI에 비해 통신 속도는 느리지만 통신 거리가 길고 장애물에도 강하다.

NDN Named Data Networking.
콘텐츠 자체의 정보와 라우터 기능만으로 데이터 전송을 수행하는 기술.

NGN Next Generation Network.
ITU-T에서 개발하고 있는 차세대 통신망.
목소리, 데이터, 비디오 같은 모든 종류의 매체를 하나의 네트워크가 패킷으로 변환해 전송 처리.

SDN Software Delivery Network.
개방형 API를 통해 네트워크의 트래픽 전달 동작을 소프트웨어 기반 컨트롤러에서 제어 관리하는 방식.

블루투스 Bluetooth.
디지털 통신 기기를 위한 개인 근거리 무선 통신.
마우스, 키보드, 스마트폰, 태블릿, 스피커 등에서 사용.

RFID Radio-Frequency Identification.
주파수를 이용해 ID를 식별하는 방식으로 일명 전자태그로 불림.
RFID 태그와 RFID 판독기가 필요.

NFC Near Field Communication.
아주 가까운 거리의 무선 통신을 하기 위한 기술로 RFID 기술의 일종이다.

비콘 beacon.
근거리에 있는 스마트 기기를 자동으로 인식하여 필요한 데이터를 전송할 수 있는 장치.
블루투스 비콘이라고도 한다.

UWB Ultra-wideband.
넓은 대역에 걸쳐 낮은 전력으로 대용량의 정보를 전송하는 무선통신 기술.

Ad-hoc Network.
분산형 네트워크를 의미하며 특정 기지국에 의존하지 않고 무선 이동단말로만 구성된 네트워크.

피코넷 PICONET.
Bluetooth 기술이나 UWB 통신 기술을 사용하여 무선 사용자 그룹의 장치를 연결하는 애드혹 네트워크.

WBAN.
인체 통신망, 인체 영역 통신망.

USN Ubiquitous Sensor Network.
필요한 모든 곳에 RFID 태그를 부착하고 이를 통해 네트워크에 연결하여 정보를 관리하는 것.

GPS Global Positioning System.
범 지구 위성 항법 시스템 중 하나.

위치 기반 서비스 LBS : Location-Based Service.
사용자의 변경되는 위치에 따르는 특정 정보를 제공하는 무선 콘텐츠 서비스.

GIS Geographic Information System.
지리공간적으로 참조 가능한 모든 형태의 정보를 통합하는 통합체.

CDN Content Delivery Network.
여러 노드를 가진 네트워크에 데이터를 저장하여 제공하는 시스템.

SON Self-Organizing Network.
모바일 무선 접속 네트워크를 더 빠르게 만들기 위해 설계된 자동화 기술.

Network Slicing.
물리 네트워크 하부 구조에서 독립적인 논리망의 다중화를 가능케 하는 네트워크 아키텍쳐.

ALL - IP.
IP를 기반으로 서로 다른 네트워크가 통합된 구조를 갖는 차세대 네트워크.

WDM Wavelength Division Multiplexing.
파장이 서로 다른 복수의 신호를 전송해서 여러 대의 단말기가 동시에 통신 회선을 사용.

LOD Linked Open Data.
Linked Data와 Open Data의 합성어로 누구나 사용할 수 있도록 웹 상에 공개된 연계 데이터.



 # 소프트웨어 신기술 용어.

인공지능 Artificial Intelligence.
인간의 학습능력, 추론능력, 지각능력 등을 컴퓨터 프로그램으로 실현한 기술.
지능을 학조 있는 컴퓨터 시스템.

Machine Learning.
경험을 통해 자동으로 개선하는 컴퓨터 알고리즘.
인공지능의 한 분야로 간주.

Deep Learning.
인간의 두뇌를 모델로 만들어진 인공 신경망을 기반으로 하는 기계 학습 알고리즘.
사람의 사고방식을 컴퓨터에게 가르치는 기계 학습의 한 분야.

전문가 시스템 Experts System.
인간이 가지고 있는 전문적인 지식을 정리하고 표현하여 컴퓨터에 기억시킴.

Neualink.
작은 전극을 뇌에 이식함으로써 생각을 업로드하고 다운로드하는 것을 목표로 함.

가상 현실 VR : Virtual Reality.
현실과 유사한 체험을 할 수 있도록 구현된 가상의 공간.

증강 현실 AR : Augmented Reality.
실제 현실에 가상의 영상을 더했다는 의미이다.

융합 현실 MR : Mixed Reality.
VR과 AR 기술의 한계를 보완하고자 하는 기술이다.

블록 체인 Block Chain.
분산 데이터 저장 기술의 한 형태로, 운영자에 의한 임의 조작이 불가능하도록 고안.
비트 코인을 비롯한 대부분의 암호 화폐 거래에 사용.

양자 암호 키 분배 Quantum Key Distribution.
중간에 도청자가 난입할 경우 그 존재가 드러난다.
신호가 왜곡되어 도청자도 정확한 정보를 얻을 수 없는 보안성을 가짐.

디지털 워터마크.
사진이나 동영상 같은 각종 디지털 데이터에 저작권 정보와 같은 비밀정보를 삽입.

Privacy-enhancing technologies.
개인 정보 침해 위험을 관리하기 위한 핵심 기술.

공통평가기준 Comon Criteria.
IP 제품이나 특정 사이트의 정보 시스템에 대해 정보 보안 평가 인증을 위한 평가 기준.



 # 하드웨어 신기술 용어.

High Availability.
장애 발생 시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메커니즘.

3D Printing.
대상을 평면에 출력하지 않고 손으로 만질 수 있는 실제 물체로 만들어 내는 것.

4D Printing.
특전 환경 조건이 갖추어지면 스스로 형태를 변화하는 제품을 3D Printing 하는 기술.

RAID.
여러 개의 하드디스크로 디스크 배열을 구성하여 디스크의 사용 속도를 향상시키는 기술.

N-Screen.
N개의 서로 다른 단말기에서 동일한 콘텐츠를 자유롭게 이용할 수 있는 서비스.

Thin Client PC.
주변 장치 없이 기본적인 메모리만 갖추고 서버와 네트워크로 운용되는 개인용 컴퓨터.

Phablet.
Phone과 Tablet의 합성어로 태블릿 기능을 포함한 5인치 이상의 대화면 스마트 폰.



 # 데이터 베이스 신용어.

Big Data.
막대한 양의 정형 또는 비정형 데이터 집합.

Broad Data.
소비자와 상호 작용을 통해 생성된 것으로 기존 데이터에 가치가 더해진 데이터.

Meta Data.
데이터를 정의하고 설명해 주는 데이터.

Digital Archiving.
디지털 정보 자원을 장기적으로 보존하기 위한 작업.

Hadoop.
오픈 소스를 기반으로 한 분산 컴퓨팅 플랫폼.

Data Diet.
데이터를 삭제하는 것이 아니라 압축하여 저장하는 작업.

Data Mining.
대량의 데이터를 분석하여 패턴을 찾아내는 기법.

OLAP Online Analytical Processing.
다차원으로 이루어진 데이터로부터 통계적인 요약 정보를 분석하여 의사결정에 활용하는 방식.

데이터 웨어하우스 Data Warehouse.
다량의 데이터를 효과적으로 분석하여 정보화하고 효율적으로 사용하는 데이터베이스.

데이터 마트 Data Mart.
특정 주제로 묶어서 구축된 단일 주제의 데이터 웨어하우스.




















